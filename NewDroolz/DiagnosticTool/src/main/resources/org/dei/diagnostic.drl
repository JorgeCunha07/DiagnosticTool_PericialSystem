package org.dei.diagnostic;

import org.dei.facts.Resposta;
import org.dei.facts.model.Carro;
import org.dei.facts.Evidence;
import java.util.List;
import java.util.ArrayList;
import org.dei.facts.model.Componente;

global org.dei.facts.model.Carro selectedCar;
global org.dei.whynot.WhyNot whyNot;

// Helper functions
function Componente getComponenteByName(Carro carro, String nomeComponente) {
    for (Componente comp : carro.getComponentes()) {
        if (comp.getNome().equalsIgnoreCase(nomeComponente)) {
            return comp;
        }
    }
    return null;
}

function String getUnidadeComponente(Carro carro, String nomeComponente) {
    for (Componente comp : carro.getComponentes()) {
        if (comp.getNome().equalsIgnoreCase(nomeComponente)) {
            return comp.getUnidade();
        }
    }
    return "";
}

// Função auxiliar para substituir vírgula por ponto
function String substituirVirgulaPorPonto(String texto) {
    if (texto != null) {
        return texto.replace(",", ".");
    }
    return texto;
}

// Função auxiliar para verificar se a string é numérica
function boolean isNumeric(String str) {
    try {
        Double.parseDouble(str);
        return true;
    } catch (NumberFormatException e) {
        return false;
    }
}


// Rule D01: Start Diagnostic
rule "D01: Start Diagnostic"
    when
        $resposta : Resposta(estado == "iniciarDiagnostico")
    then
        System.out.println("O carro apresenta algum problema? (Sim/Não)");
        $resposta.setEstado("perguntarProblemaInicial");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D02: Process response - Carro tem problema 'Sim'
rule "D02: Process response - Carro tem problema 'Sim'"
    when
        $resposta : Resposta(estado == "perguntarProblemaInicial", texto.equalsIgnoreCase("Sim"))
    then
        $resposta.setEstado("perguntarCarroLigaChave");
        Evidence<String, String> ev = new Evidence<>("problemaInicial", "Sim");
        $resposta.setTexto(""); 
        insert(ev);
        update($resposta);
end

// Rule D03: Process response - Carro tem problema 'Não'
rule "D03: Process response - Carro tem problema 'Não'"
    when
        $resposta : Resposta(estado == "perguntarProblemaInicial", texto.equalsIgnoreCase("Não"))
    then
        $resposta.setDiagnostico("Sem problemas identificados");
        $resposta.setSolucao("Não é necessária nenhuma ação");
        $resposta.setPorque("O usuário indicou que o carro não apresenta problemas");
        $resposta.setPorqueNao("Nenhum problema foi relatado");
        $resposta.setEstado("diagnosticoConcluido");
        Evidence<String, String> ev = new Evidence<>("problemaInicial", "Não");
        insert(ev);
        update($resposta);
end

// Rule D04: Ask "O carro liga a chave?"
rule "D04: Ask 'O carro liga a chave?'"
    when
        $resposta : Resposta(estado == "perguntarCarroLigaChave")
    then
        System.out.println("O carro liga a chave? (Sim/Não)");
        $resposta.setEstado("processarCarroLigaChave");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D05: Process response to "O carro liga a chave?"
rule "D05: Process 'O carro liga a chave?'"
    when
        $resposta : Resposta(estado == "processarCarroLigaChave", texto != null && texto != "")
    then
        Evidence<String, String> ev = new Evidence<>("processarCarroLigaChave", $resposta.getTexto());
        insert(ev);
        if ($resposta.getTexto().equalsIgnoreCase("Sim")) {
            $resposta.setEstado("perguntarCarroLigaMasVaiAbaixo");
            $resposta.setTexto(""); 
            
        } else if ($resposta.getTexto().equalsIgnoreCase("Não")) {
            System.out.println("O carro não liga a chave. Verifique a bateria e cabos de bateria.");
            $resposta.setEstado("verificarBateriaECabos");
            $resposta.setTexto(""); 
        } else {
            System.out.println("Resposta inválida.");
            $resposta.setEstado("processarCarroLigaChave");
            $resposta.setTexto("");
        }
        update($resposta);
end

// Rule D06: Processar 'O carro liga a chave? Não'
rule "D06: Processar 'O carro liga a chave? Não'"
    when
        $resposta : Resposta(estado == "verificarBateriaECabos", texto == "")
    then
        System.out.println("Verifique a bateria e cabos de bateria. A bateria está fraca ou sem carga? (Sim/Não)");
        $resposta.setEstado("perguntarBateriaFraca");
        $resposta.setTexto(""); 
        update($resposta);
end


// Rule D07: Verificar a bateria e cabos de bateria
rule "D07: Verificar a bateria e cabos de bateria"
    when
        $resposta : Resposta(estado == "verificarBateriaECabos", texto == "")
    then
        Evidence<String, String> ev = new Evidence<>("verificarBateriaECabos", $resposta.getTexto());
        insert(ev);
        System.out.println("Verifique a bateria e cabos de bateria. A bateria está fraca ou sem carga? (Sim/Não)");
        $resposta.setEstado("perguntarBateriaFraca");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D08: Processar "Bateria fraca ou sem carga? Sim"
rule "D08: Processar 'Bateria fraca ou sem carga? Sim'"
    when
        $resposta : Resposta(estado == "perguntarBateriaFraca", texto == "Sim")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarBateriaFraca", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Bateria com defeito ou sem carga");
        $resposta.setSolucao("Substituir ou recarregar a bateria");
        $resposta.setPorque("A bateria está fraca ou sem carga");
        $resposta.setPorqueNao("Outros componentes estão funcionando corretamente");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D09: Processar "Bateria fraca ou sem carga? Não"
rule "D09: Processar 'Bateria fraca ou sem carga? Não'"
    when
        $resposta : Resposta(estado == "perguntarBateriaFraca", texto == "Não")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarBateriaFraca", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarMotorArranque");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D10: Verificar motor de arranque e pedal de embraiagem
rule "D10: Verificar motor de arranque e pedal de embraiagem"
    when
        $resposta : Resposta(estado == "verificarMotorArranque", texto == "")
    then
        System.out.println("Verifique o motor de arranque e se o pedal de embraiagem está acionado. O motor de arranque está com defeito? (Sim/Não)");
        $resposta.setEstado("perguntarMotorArranqueDefeito");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D11: Processar "Motor de arranque com defeito? Sim"
rule "D11: Processar 'Motor de arranque com defeito? Sim'"
    when
        $resposta : Resposta(estado == "perguntarMotorArranqueDefeito", texto == "Sim")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarMotorArranqueDefeito", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Falha no motor de arranque");
        $resposta.setSolucao("Substituir motor de arranque");
        $resposta.setPorque("O motor de arranque está com defeito");
        $resposta.setPorqueNao("A bateria está funcionando corretamente");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D12: Processar "Motor de arranque com defeito? Não"
rule "D12: Processar 'Motor de arranque com defeito? Não'"
    when
        $resposta : Resposta(estado == "perguntarMotorArranqueDefeito", texto == "Não")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarMotorArranqueDefeito", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarSistemaIgnicao");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D13: Verificar sistema de ignição
rule "D13: Verificar sistema de ignição"
    when
        $resposta : Resposta(estado == "verificarSistemaIgnicao", texto == "")
    then
        System.out.println("Verifique o sistema de ignição. A ignição está a falhar? (Sim/Não)");
        $resposta.setEstado("perguntarIgnicaoFalhando");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D14: Processar "Ignição a falhar? Sim"
rule "D14: Processar 'Ignição a falhar? Sim'"
    when
        $resposta : Resposta(estado == "perguntarIgnicaoFalhando", texto == "Sim")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarIgnicaoFalhando", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Sistema de ignição com defeito");
        $resposta.setSolucao("Verificar chave de ignição, fusíveis, conectores e alimentação de combustível");
        $resposta.setPorque("A ignição está a falhar");
        $resposta.setPorqueNao("Bateria e motor de arranque estão funcionando");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D15: Processar "Ignição a falhar? Não"
rule "D15: Processar 'Ignição a falhar? Não'"
    when
        $resposta : Resposta(estado == "perguntarIgnicaoFalhando", texto == "Não")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarIgnicaoFalhando", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarSistemaSeguranca");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D16: Verificar sistema de segurança (Imobilizador)
rule "D16: Verificar sistema de segurança (Imobilizador)"
    when
        $resposta : Resposta(estado == "verificarSistemaSeguranca", texto == "")
    then
        System.out.println("Verifique o sistema de segurança (Imobilizador). O imobilizador ou alarme está a bloquear? (Sim/Não)");
        $resposta.setEstado("perguntarImobilizadorBloqueando");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D17: Processar "Imobilizador ou alarme a bloquear? Sim"
rule "D17: Processar 'Imobilizador ou alarme a bloquear? Sim'"
    when
        $resposta : Resposta(estado == "perguntarImobilizadorBloqueando", texto == "Sim")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarImobilizadorBloqueando", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Sistema de segurança ativado");
        $resposta.setSolucao("Desativar sistema de segurança");
        $resposta.setPorque("O imobilizador ou alarme está a bloquear o veículo");
        $resposta.setPorqueNao("Bateria, motor de arranque e ignição estão funcionais");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D18: Processar "Imobilizador ou alarme a bloquear? Não"
rule "D18: Processar 'Imobilizador ou alarme a bloquear? Não'"
    when
        $resposta : Resposta(estado == "perguntarImobilizadorBloqueando", texto == "Não")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarImobilizadorBloqueando", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarCaboCondutor");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D19: Verificar cabo condutor de energia elétrica e fichas de ligação
rule "D19: Verificar cabo condutor de energia elétrica e fichas de ligação"
    when
        $resposta : Resposta(estado == "verificarCaboCondutor", texto == "")
    then
        System.out.println("Verifique cabos condutores de energia elétrica e fichas de ligação. Há fios danificados? (Sim/Não)");
        $resposta.setEstado("perguntarFiosDanificados");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D20: Processar "Fios danificados? Sim"
rule "D20: Processar 'Fios danificados? Sim'"
    when
        $resposta : Resposta(estado == "perguntarFiosDanificados", texto == "Sim")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarFiosDanificados", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Fios com corte ou curto-circuito");
        $resposta.setSolucao("Reparar ou substituir cabos condutores de energia elétrica");
        $resposta.setPorque("Há fios danificados ou em curto-circuito");
        $resposta.setPorqueNao("Outros sistemas elétricos estão funcionais");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D21: Processar "Fios danificados? Não"
rule "D21: Processar 'Fios danificados? Não'"
    when
        $resposta : Resposta(estado == "perguntarFiosDanificados", texto == "Não")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarFiosDanificados", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Verificação adicional necessária");
        $resposta.setSolucao("Seguir protocolo de reparação da marca, consultar especialista");
        $resposta.setPorque("Nenhum problema específico foi identificado");
        $resposta.setPorqueNao("As verificações anteriores não apontaram falhas claras");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D22: Perguntar "O carro liga mas vai abaixo?"
rule "D22: Perguntar 'O carro liga mas vai abaixo?'"
    when
        $resposta : Resposta(estado == "perguntarCarroLigaMasVaiAbaixo", texto == "")
    then
        System.out.println("O carro liga mas vai abaixo? (Sim/Não)");
        $resposta.setEstado("processarCarroLigaMasVaiAbaixo");  // Altera o estado para processar a resposta
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D23: Processar "O carro liga mas vai abaixo? Sim"
rule "D23: Processar 'O carro liga mas vai abaixo? Sim'"
    when
        $resposta : Resposta(estado == "processarCarroLigaMasVaiAbaixo", texto.equalsIgnoreCase("Sim"))
    then
        Evidence<String, String> ev = new Evidence<>("processarCarroLigaMasVaiAbaixo", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarSobreaquecimentoMotor");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D24: Processar "O carro liga mas vai abaixo? Não"
rule "D24: Processar 'O carro liga mas vai abaixo? Não'"
    when
        $resposta : Resposta(estado == "processarCarroLigaMasVaiAbaixo", texto.equalsIgnoreCase("Não"))
    then
        Evidence<String, String> ev = new Evidence<>("processarCarroLigaMasVaiAbaixo", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("processarCarroFazBarulhoAnormal");
        $resposta.setTexto(""); 
        update($resposta);
end



// Rule D25: Verificar sobreaquecimento do motor
rule "D25: Verificar sobreaquecimento do motor"
    when
        $resposta : Resposta(estado == "verificarSobreaquecimentoMotor", texto == "")
    then
        System.out.println("O motor está a sobreaquecer? (Sim/Não)");
        $resposta.setEstado("perguntarMotorSobreaquecendo");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D26: Processar "Motor a sobreaquecer? Sim"
rule "D26: Processar 'Motor a sobreaquecer? Sim'"
    when
        $resposta : Resposta(estado == "perguntarMotorSobreaquecendo", texto == "Sim")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarMotorSobreaquecendo", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarSistemaArrefecimento");
        $resposta.setTexto("");
        update($resposta);
end

// Rule D27: Processar "Motor a sobreaquecer? Não"
rule "D27: Processar 'Motor a sobreaquecer? Não'"
    when
        $resposta : Resposta(estado == "perguntarMotorSobreaquecendo", texto == "Não")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarMotorSobreaquecendo", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarSistemaCombustivel");
        $resposta.setTexto("");
        update($resposta);
end

// Rule D28: Verificar sistema de arrefecimento
rule "D28: Verificar sistema de arrefecimento"
    when
        $resposta : Resposta(estado == "verificarSistemaArrefecimento", texto == "")
    then
        System.out.println("Verifique o sistema de arrefecimento. O radiador ou ventoinha está com defeito? (Sim/Não)");
        $resposta.setEstado("perguntarRadiadorVentoinhaDefeito");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D29: Processar "Radiador ou ventoinha com defeito? Sim"
rule "D29: Processar 'Radiador ou ventoinha com defeito? Sim'"
    when
        $resposta : Resposta(estado == "perguntarRadiadorVentoinhaDefeito", texto == "Sim")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarRadiadorVentoinhaDefeito", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Problema no radiador ou ventoinha");
        $resposta.setSolucao("Substituir radiador/ventoinha");
        $resposta.setPorque("O radiador ou a ventoinha estão com defeito");
        $resposta.setPorqueNao("Outros componentes do sistema de arrefecimento estão funcionais");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D30: Processar "Radiador ou ventoinha com defeito? Não"
rule "D30: Processar 'Radiador ou ventoinha com defeito? Não'"
    when
        $resposta : Resposta(estado == "perguntarRadiadorVentoinhaDefeito", texto == "Não")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarRadiadorVentoinhaDefeito", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarFugasArrefecimento");
        $resposta.setTexto("");
        update($resposta);
end

// Rule D31: Verificar fugas no sistema de arrefecimento
rule "D31: Verificar fugas no sistema de arrefecimento"
    when
        $resposta : Resposta(estado == "verificarFugasArrefecimento", texto == "")
    then
        System.out.println("Verifique se há fugas no sistema de arrefecimento. Fuga detectada? (Sim/Não)");
        $resposta.setEstado("perguntarFugaArrefecimento");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D32: Processar "Fuga detectada? Sim"
rule "D32: Processar 'Fuga detectada? Sim'"
    when
        $resposta : Resposta(estado == "perguntarFugaArrefecimento", texto == "Sim")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarFugaArrefecimento", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Fugas no sistema de arrefecimento");
        $resposta.setSolucao("Reparar fuga e completar fluido");
        $resposta.setPorque("Há uma fuga no sistema de arrefecimento");
        $resposta.setPorqueNao("Outros componentes do sistema de arrefecimento estão funcionais");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D33: Processar "Fuga detectada? Não"
rule "D33: Processar 'Fuga detectada? Não'"
    when
        $resposta : Resposta(estado == "perguntarFugaArrefecimento", texto == "Não")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarFugaArrefecimento", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarTermostato");
        $resposta.setTexto("");
        update($resposta);
end

// Rule D34: Verificar termóstato
rule "D34: Verificar termóstato"
    when
        $resposta : Resposta(estado == "verificarTermostato", texto == "")
    then
        System.out.println("Verifique o termóstato. O termóstato está defeituoso? (Sim/Não)");
        $resposta.setEstado("perguntarTermostatoDefeituoso");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D35: Processar "Termóstato defeituoso? Sim"
rule "D35: Processar 'Termóstato defeituoso? Sim'"
    when
        $resposta : Resposta(estado == "perguntarTermostatoDefeituoso", texto == "Sim")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarTermostatoDefeituoso", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Termóstato com defeito");
        $resposta.setSolucao("Substituir termóstato");
        $resposta.setPorque("O termóstato está defeituoso");
        $resposta.setPorqueNao("Outros componentes do sistema de arrefecimento estão funcionais");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D36: Processar "Termóstato defeituoso? Não"
rule "D36: Processar 'Termóstato defeituoso? Não'"
    when
        $resposta : Resposta(estado == "perguntarTermostatoDefeituoso", texto == "Não")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarTermostatoDefeituoso", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarBombaAgua");
        $resposta.setTexto("");
        update($resposta);
end

// Rule D37: Verificar bomba de água
rule "D37: Verificar bomba de água"
    when
        $resposta : Resposta(estado == "verificarBombaAgua", texto == "")
    then
        System.out.println("Verifique a bomba de água. A bomba de água está com defeito? (Sim/Não)");
        $resposta.setEstado("perguntarBombaAguaDefeito");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D38: Processar "Bomba de água com defeito? Sim"
rule "D38: Processar 'Bomba de água com defeito? Sim'"
    when
        $resposta : Resposta(estado == "perguntarBombaAguaDefeito", texto == "Sim")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarBombaAguaDefeito", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Falha na bomba de água");
        $resposta.setSolucao("Substituir bomba de água");
        $resposta.setPorque("A bomba de água está com defeito");
        $resposta.setPorqueNao("Outros componentes do sistema de arrefecimento estão funcionais");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D39: Processar "Bomba de água com defeito? Não"
rule "D39: Processar 'Bomba de água com defeito? Não'"
    when
        $resposta : Resposta(estado == "perguntarBombaAguaDefeito", texto == "Não")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarBombaAguaDefeito", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Verificação adicional necessária");
        $resposta.setSolucao("Consultar especialista");
        $resposta.setPorque("Nenhum problema específico foi identificado no sistema de arrefecimento");
        $resposta.setPorqueNao("As verificações anteriores não apontaram falhas claras");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D40: Verificar sistema de combustível
rule "D40: Verificar sistema de combustível"
    when
        $resposta : Resposta(estado == "verificarSistemaCombustivel", texto == "")
    then
        System.out.println("Verifique o sistema de combustível. Há falta de combustível ou falha na bomba? (Sim/Não)");
        $resposta.setEstado("perguntarFaltaCombustivelOuFalhaBomba");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D41: Processar "Falta de combustível ou falha na bomba? Sim"
rule "D41: Processar 'Falta de combustível ou falha na bomba? Sim'"
    when
        $resposta : Resposta(estado == "perguntarFaltaCombustivelOuFalhaBomba", texto == "Sim")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarFaltaCombustivelOuFalhaBomba", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Falta de combustível ou bomba de combustível com defeito");
        $resposta.setSolucao("Reabastecer ou substituir a bomba de combustível");
        $resposta.setPorque("Há falta de combustível ou a bomba de combustível está com defeito");
        $resposta.setPorqueNao("Outros componentes do sistema de combustível estão funcionais");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D42: Processar "Falta de combustível ou falha na bomba? Não"
rule "D42: Processar 'Falta de combustível ou falha na bomba? Não'"
    when
        $resposta : Resposta(estado == "perguntarFaltaCombustivelOuFalhaBomba", texto == "Não")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarFaltaCombustivelOuFalhaBomba", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarFiltroCombustivel");
        $resposta.setTexto("");
        update($resposta);
end

// Rule D43: Verificar filtro de combustível
rule "D43: Verificar filtro de combustível"
    when
        $resposta : Resposta(estado == "verificarFiltroCombustivel", texto == "")
    then
        System.out.println("Verifique o filtro de combustível. O filtro de combustível está entupido? (Sim/Não)");
        $resposta.setEstado("perguntarFiltroCombustivelEntupido");
        $resposta.setTexto(""); 
        update($resposta);
end
// Rule D44: Processar "Filtro de combustível entupido? Sim"
rule "D44: Processar 'Filtro de combustível entupido? Sim'"
    when
        $resposta : Resposta(estado == "perguntarFiltroCombustivelEntupido", texto == "Sim")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarFiltroCombustivelEntupido", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Filtro de combustível entupido");
        $resposta.setSolucao("Substituir filtro de combustível");
        $resposta.setPorque("O filtro de combustível está entupido");
        $resposta.setPorqueNao("Outros componentes do sistema de combustível estão funcionais");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D45: Processar "Filtro de combustível entupido? Não"
rule "D45: Processar 'Filtro de combustível entupido? Não'"
    when
        $resposta : Resposta(estado == "perguntarFiltroCombustivelEntupido", texto == "Não")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarFiltroCombustivelEntupido", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarSistemaInjecaoCombustivel");
        $resposta.setTexto("");
        update($resposta);
end

// Rule D46: Verificar sistema de injeção de combustível
rule "D46: Verificar sistema de injeção de combustível"
    when
        $resposta : Resposta(estado == "verificarSistemaInjecaoCombustivel", texto == "")
    then
        System.out.println("Verifique o sistema de injeção de combustível. A injeção de combustível está com defeito? (Sim/Não)");
        $resposta.setEstado("perguntarInjecaoCombustivelDefeito");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D47: Processar "Injeção de combustível com defeito? Sim"
rule "D47: Processar 'Injeção de combustível com defeito? Sim'"
    when
        $resposta : Resposta(estado == "perguntarInjecaoCombustivelDefeito", texto == "Sim")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarInjecaoCombustivelDefeito", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Injeção de combustível com defeito");
        $resposta.setSolucao("Limpar ou substituir injetores");
        $resposta.setPorque("A injeção de combustível está com defeito");
        $resposta.setPorqueNao("Outros componentes do sistema de combustível estão funcionais");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D48: Processar "Injeção de combustível com defeito? Não"
rule "D48: Processar 'Injeção de combustível com defeito? Não'"
    when
        $resposta : Resposta(estado == "perguntarInjecaoCombustivelDefeito", texto == "Não")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarInjecaoCombustivelDefeito", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarSistemaIgnicaoNovamente");
        $resposta.setTexto("");
        update($resposta);
end

// Rule D49: Verificar sistema de ignição (novamente)
rule "D49: Verificar sistema de ignição (novamente)"
    when
        $resposta : Resposta(estado == "verificarSistemaIgnicaoNovamente", texto == "")
    then
        System.out.println("Verifique o sistema de ignição. As velas de ignição estão defeituosas? (Sim/Não)");
        $resposta.setEstado("perguntarVelasIgnicaoDefeituosas");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D50: Processar "Velas de ignição defeituosas? Sim"
rule "D50: Processar 'Velas de ignição defeituosas? Sim'"
    when
        $resposta : Resposta(estado == "perguntarVelasIgnicaoDefeituosas", texto == "Sim")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarVelasIgnicaoDefeituosas", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Falha nas velas de ignição");
        $resposta.setSolucao("Substituir velas de ignição");
        $resposta.setPorque("As velas de ignição estão defeituosas");
        $resposta.setPorqueNao("Outros componentes do sistema de ignição estão funcionais");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D51: Processar "Velas de ignição defeituosas? Não"
rule "D51: Processar 'Velas de ignição defeituosas? Não'"
    when
        $resposta : Resposta(estado == "perguntarVelasIgnicaoDefeituosas", texto == "Não")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarVelasIgnicaoDefeituosas", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarSensoresMotor");
        $resposta.setTexto("");
        update($resposta);
end

// Rule D52: Verificar sensores do motor
rule "D52: Verificar sensores do motor"
    when
        $resposta : Resposta(estado == "verificarSensoresMotor", texto == "")
    then
        System.out.println("Verifique os sensores do motor (MAP, MAF, etc.). Há sensores defeituosos? (Sim/Não)");
        $resposta.setEstado("perguntarSensoresDefeituosos");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D53: Processar "Sensores defeituosos? Sim"
rule "D53: Processar 'Sensores defeituosos? Sim'"
    when
        $resposta : Resposta(estado == "perguntarSensoresDefeituosos", texto == "Sim")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarSensoresDefeituosos", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Sensor do motor com falha");
        $resposta.setSolucao("Verificar e substituir sensores");
        $resposta.setPorque("Os sensores do motor estão defeituosos");
        $resposta.setPorqueNao("Outros componentes do motor estão funcionais");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D54: Processar "Sensores defeituosos? Não"
rule "D54: Processar 'Sensores defeituosos? Não'"
    when
        $resposta : Resposta(estado == "perguntarSensoresDefeituosos", texto == "Não")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarSensoresDefeituosos", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Problema indeterminado");
        $resposta.setSolucao("Consultar especialista");
        $resposta.setPorque("Nenhum problema específico foi identificado");
        $resposta.setPorqueNao("As verificações anteriores não apontaram falhas claras");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D55: Perguntar "O carro faz barulho anormal?"
rule "D55: Perguntar 'O carro faz barulho anormal?'"
    when
        $resposta : Resposta(estado == "processarCarroFazBarulhoAnormal", texto == "")
    then
        System.out.println("O carro faz barulho anormal? (Sim/Não)");
        $resposta.setEstado("perguntarCarroFazBarulhoAnormal");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D56: Processar "O carro faz barulho anormal? Sim"
rule "D56: Processar 'O carro faz barulho anormal? Sim'"
    when
        $resposta : Resposta(estado == "perguntarCarroFazBarulhoAnormal", texto == "Sim")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarCarroFazBarulhoAnormal", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarMotorBarulho");
        $resposta.setTexto("");
        update($resposta);
end

// Rule D57: Processar "O carro faz barulho anormal? Não"
rule "D57: Processar 'O carro faz barulho anormal? Não'"
    when
        $resposta : Resposta(estado == "perguntarCarroFazBarulhoAnormal", texto == "Não")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarCarroFazBarulhoAnormal", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("perguntarCarroDificuldadeTravar");
        $resposta.setTexto("");
        update($resposta);
end

// Rule D58: Verificar motor (barulho)
rule "D58: Verificar motor (barulho)"
    when
        $resposta : Resposta(estado == "verificarMotorBarulho", texto == "")
    then
        System.out.println("Verifique o motor. Há barulho no motor? (Sim/Não)");
        $resposta.setEstado("perguntarBarulhoNoMotor");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D59: Processar "Barulho no motor? Sim"
rule "D59: Processar 'Barulho no motor? Sim'"
    when
        $resposta : Resposta(estado == "perguntarBarulhoNoMotor", texto == "Sim")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarBarulhoNoMotor", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarCorreiasCorrenteDentada");
        $resposta.setTexto("");
        update($resposta);
end

// Rule D60: Processar "Barulho no motor? Não"
rule "D60: Processar 'Barulho no motor? Não'"
    when
        $resposta : Resposta(estado == "perguntarBarulhoNoMotor", texto == "Não")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarBarulhoNoMotor", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarSuspensaoRodas");
        $resposta.setTexto("");
        update($resposta);
end

// Rule D61: Verificar correias ou corrente dentada
rule "D61: Verificar correias ou corrente dentada"
    when
        $resposta : Resposta(estado == "verificarCorreiasCorrenteDentada", texto == "")
    then
        System.out.println("Verifique as correias ou corrente dentada. A correia dentada está gasta? (Sim/Não)");
        $resposta.setEstado("perguntarCorreiaDentadaGasta");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D62: Processar "Correia dentada gasta? Sim"
rule "D62: Processar 'Correia dentada gasta? Sim'"
    when
        $resposta : Resposta(estado == "perguntarCorreiaDentadaGasta", texto == "Sim")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarCorreiaDentadaGasta", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Correia dentada gasta e rolamentos");
        $resposta.setSolucao("Substituir kit de distribuição");
        $resposta.setPorque("A correia dentada está gasta");
        $resposta.setPorqueNao("Outros componentes relacionados estão funcionais");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D63: Processar "Correia dentada gasta? Não"
rule "D63: Processar 'Correia dentada gasta? Não'"
    when
        $resposta : Resposta(estado == "perguntarCorreiaDentadaGasta", texto == "Não")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarCorreiaDentadaGasta", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarComponentesBarulhoMotor");
        $resposta.setTexto("");
        update($resposta);
end

// Rule D64: Verificar componentes (Bomba de água, alternador, etc.)
rule "D64: Verificar componentes (Bomba de água, alternador, etc.)"
    when
        $resposta : Resposta(estado == "verificarComponentesBarulhoMotor", texto == "")
    then
        Evidence<String, String> ev = new Evidence<>("verificarComponentesBarulhoMotor", $resposta.getTexto());
        insert(ev);
        System.out.println("Verifique os seguintes componentes:");
        System.out.println("1. Bomba de água");
        System.out.println("2. Alternador");
        System.out.println("3. Compressor de ar condicionado");
        System.out.println("4. Tensores da correia");
        System.out.println("Digite o número correspondente ao componente com defeito, ou 0 se nenhum:");
        $resposta.setEstado("perguntarComponenteDefeituoso");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D65: Processar "Componente defeituoso? 1"
rule "D65: Processar 'Componente defeituoso? 1'"
    when
        $resposta : Resposta(estado == "perguntarComponenteDefeituoso", texto == "1")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarComponenteDefeituoso", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Falha na bomba de água");
        $resposta.setSolucao("Substituir bomba de água");
        $resposta.setPorque("A bomba de água está com defeito");
        $resposta.setPorqueNao("Outros componentes estão funcionais");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D66: Processar "Componente defeituoso? 2"
rule "D66: Processar 'Componente defeituoso? 2'"
    when
        $resposta : Resposta(estado == "perguntarComponenteDefeituoso", texto == "2")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarComponenteDefeituoso", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Alternador com defeito");
        $resposta.setSolucao("Substituir alternador");
        $resposta.setPorque("O alternador está com defeito");
        $resposta.setPorqueNao("Outros componentes estão funcionais");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D67: Processar "Componente defeituoso? 3"
rule "D67: Processar 'Componente defeituoso? 3'"
    when
        $resposta : Resposta(estado == "perguntarComponenteDefeituoso", texto == "3")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarComponenteDefeituoso", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Compressor de ar condicionado com defeito");
        $resposta.setSolucao("Substituir compressor de ar condicionado");
        $resposta.setPorque("O compressor de ar condicionado está com defeito");
        $resposta.setPorqueNao("Outros componentes estão funcionais");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D68: Processar "Componente defeituoso? 4"
rule "D68: Processar 'Componente defeituoso? 4'"
    when
        $resposta : Resposta(estado == "perguntarComponenteDefeituoso", texto == "4")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarComponenteDefeituoso", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Falha nos tensores da correia");
        $resposta.setSolucao("Substituir tensores da correia");
        $resposta.setPorque("Os tensores da correia estão com defeito");
        $resposta.setPorqueNao("Outros componentes estão funcionais");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D69: Processar "Componente defeituoso? 0"
rule "D69: Processar 'Componente defeituoso? 0'"
    when
        $resposta : Resposta(estado == "perguntarComponenteDefeituoso", texto == "0")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarComponenteDefeituoso", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarLubrificacaoMotor");
        $resposta.setTexto("");
        update($resposta);
end

// Rule D70: Processar "Componente defeituoso? Inválido"
rule "D70: Processar 'Componente defeituoso? Inválido'"
    when
        $resposta : Resposta(estado == "perguntarComponenteDefeituoso",
                             texto != "0" && texto != "1" && texto != "2" && texto != "3" && texto != "4" && texto != "")
    then
        System.out.println("Opção inválida. Por favor, digite um número de 0 a 4.");
        $resposta.setEstado("perguntarComponenteDefeituoso");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D71: Verificar lubrificação do motor
rule "D71: Verificar lubrificação do motor"
    when
        $resposta : Resposta(estado == "verificarLubrificacaoMotor", texto == "")
    then
        Evidence<String, String> ev = new Evidence<>("verificarLubrificacaoMotor", $resposta.getTexto());
        insert(ev);
        System.out.println("Verifique o nível de óleo do motor.");
        $resposta.setEstado("verificarNivelOleo");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D72: Verificar nível de óleo
rule "D72: Verificar nível de óleo"
    when
        $resposta : Resposta(estado == "verificarNivelOleo", texto == "")
        $carro : Carro() from selectedCar
    then
        Componente oleoMotor = getComponenteByName($carro, "Óleo do Motor");
        System.out.println("Qual é o nível atual de óleo? (Entre " + oleoMotor.getValorMinimo() + " e " + oleoMotor.getValorMaximo() + " " + oleoMotor.getUnidade() + ")");
        $resposta.setEstado("perguntarNivelOleoAtual");
        $resposta.setTexto("");
        update($resposta);
end

// Regra D73: Avaliar Nível de Óleo
rule "D73: Avaliar Nível de Óleo"
    when
        $resposta : Resposta(estado == "perguntarNivelOleoAtual", texto != "")
        $carro : Carro() from selectedCar
    then
        Componente oleoMotor = getComponenteByName($carro, "Óleo do Motor");

        // Substituir vírgula por ponto e validar
        String valorOleo = substituirVirgulaPorPonto($resposta.getTexto());
        System.out.println("Valor de óleo recebido: " + valorOleo);
        Evidence<String, String> ev = new Evidence<>("perguntarNivelOleoAtual", $resposta.getTexto());
        insert(ev);

        if (isNumeric(valorOleo)) {
            double nivelOleo = Double.parseDouble(valorOleo);
            // Verifica nível de óleo e direciona para as regras apropriadas
            if (nivelOleo < oleoMotor.getValorMinimoIdeal()) {
                $resposta.setEstado("nivelOleoBaixo");
                $resposta.setTexto("");
            } else if (nivelOleo > oleoMotor.getValorMaximoIdeal()) {
                $resposta.setEstado("nivelOleoAlto");
                $resposta.setTexto("");
            } else {
                $resposta.setEstado("nivelOleoNormal");
                $resposta.setTexto("");
            }
        } else {
            System.out.println("Valor inválido. Por favor, insira um valor numérico.");
            $resposta.setEstado("perguntarNivelOleoAtual");
            $resposta.setTexto("");
        }
        update($resposta);
end



// Regra para Nível de Óleo Baixo
rule "D74: Nível de óleo baixo"
    when
        $resposta : Resposta(estado == "nivelOleoBaixo")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarNivelOleoAtual", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Nível de óleo insuficiente");
        $resposta.setSolucao("Completar nível de óleo");
        $resposta.setPorque("O nível de óleo está abaixo do mínimo ideal");
        $resposta.setPorqueNao("O nível de óleo não está acima do máximo ideal");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end


// Regra para Nível de Óleo Alto
rule "D75: Nível de óleo alto"
    when
        $resposta : Resposta(estado == "nivelOleoAlto")
    then
        Evidence<String, String> ev = new Evidence<>("nivelOleoAlto", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Excesso de óleo");
        $resposta.setSolucao("Retirar excesso de óleo");
        $resposta.setPorque("O nível de óleo está acima do máximo ideal");
        $resposta.setPorqueNao("O nível de óleo não está abaixo do mínimo ideal");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Regra para Nível de Óleo Normal
rule "D76: Nível de óleo normal"
    when
        $resposta : Resposta(estado == "nivelOleoNormal")
    then
        Evidence<String, String> ev = new Evidence<>("nivelOleoNormal", $resposta.getTexto());
        insert(ev);
        $resposta.setEstado("verificarSistemaEscape");
        $resposta.setTexto("");
        update($resposta);
end


// Rule D76: Verificar sistema de escape
rule "D77: Verificar sistema de escape"
    when
        $resposta : Resposta(estado == "verificarSistemaEscape", texto == "")
    then
        System.out.println("Verifique o sistema de escape. Há problema no sistema de escape? (Sim/Não)");
        $resposta.setEstado("perguntarProblemaEscape");
        $resposta.setTexto(""); 
        update($resposta);
end

// Rule D77: Problema no sistema de escape - Sim
rule "D78: Problema no sistema de escape - Sim"
    when
        $resposta : Resposta(estado == "perguntarProblemaEscape", texto == "Sim")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarProblemaEscape", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Vazamento ou bloqueio no sistema de escape");
        $resposta.setSolucao("Reparar ou substituir sistema de escape");
        $resposta.setPorque("Há um problema identificado no sistema de escape");
        $resposta.setPorqueNao("Outros sistemas estão funcionais");
        $resposta.setEstado("diagnosticoConcluido");
        update($resposta);
end

// Rule D78: Problema no sistema de escape - Não
rule "D79: Problema no sistema de escape - Não"
    when
        $resposta : Resposta(estado == "perguntarProblemaEscape", texto == "Não")
    then
        Evidence<String, String> ev = new Evidence<>("perguntarProblemaEscape", $resposta.getTexto());
        insert(ev);
        $resposta.setDiagnostico("Verificação adicional necessária");
        $resposta.setSolucao("Consultar especialista");
        $resposta.setPorque("Nenhum problema específico foi identificado");
        $resposta.setPorqueNao("As verificações anteriores não apontaram falhas claras");
        $resposta.setEstado("diagnosticoConcluido");

        update($resposta);
end

// Rule DX: Diagnóstico Concluído
rule "DX: Diagnóstico Concluído"
    when
        $resposta : Resposta(estado == "diagnosticoConcluido")
    then
        System.out.println("Diagnóstico: " + $resposta.getDiagnostico());
        System.out.println("Solução: " + $resposta.getSolucao());
        System.out.println("Porquê: " + $resposta.getPorque());
        System.out.println("Por que não: ");
        String expectedConclusion = $resposta.getDiagnostico();
        String explanation = whyNot.getWhyNotExplanation(expectedConclusion);
        System.out.println(explanation);
        $resposta.setEstado("finalizado");
        update($resposta);
end
