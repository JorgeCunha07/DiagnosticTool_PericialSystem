package org.dei;

import org.dei.facts.Resposta;
import org.dei.facts.model.Carro;
import org.dei.facts.model.Marca;
import org.dei.facts.model.ModeloCarro;
import org.dei.facts.model.Motor;
import org.dei.facts.model.Componente;
import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;

global java.util.List carros;  // Lista de objetos Carro
global java.util.List<String> triggeredRules;
global org.slf4j.Logger LOG;

// Rule 01: Pergunta Marca do Carro
rule "R01: Pergunta Marca do Carro"
    when
        $resposta : Resposta(estado == null || estado == "")
    then
        System.out.println("Qual é a marca do carro?");
        $resposta.setEstado("aguardandoMarca");
        update($resposta);
end

// Rule 02: Verifica Marca Selecionada
rule "R02: Verifica Marca Selecionada"
    when
        $resposta : Resposta(estado == "aguardandoMarca", $texto : texto != null && texto != "")
        exists (Carro( marca.getNome() == $texto ) from carros)
    then
        System.out.println("Marca selecionada: " + $texto);
        $resposta.setMarcaSelecionada($texto);

        // Cast carros to List<Carro>
        List<Carro> carrosList = (List<Carro>) carros;

        // Listar modelos disponíveis para a marca selecionada
        Set<String> modelosDisponiveis = new HashSet<>();
        for (Carro carro : carrosList) {
            if (carro.getMarca().getNome().equals($texto)) {
                modelosDisponiveis.add(carro.getModelo().getNome());
            }
        }
        System.out.println("Modelos disponíveis: ");
        for (String modelo : modelosDisponiveis) {
            System.out.println(modelo);
        }

        $resposta.setEstado("aguardandoModelo");
        $resposta.setTexto(""); // Limpa o texto para a próxima entrada
        update($resposta);
end

// Rule 03: Pergunta Modelo do Carro
rule "R03: Pergunta Modelo do Carro"
    when
        $resposta : Resposta(estado == "aguardandoModelo", texto == "")
    then
        System.out.println("Qual é o modelo do carro?");
        // Aguarda a entrada do usuário
end

// Rule 04: Verifica Modelo Selecionado
rule "R04: Verifica Modelo Selecionado"
    when
        $resposta : Resposta(estado == "aguardandoModelo", $texto : texto != null && texto != "")
        $marcaSelecionada : String() from $resposta.getMarcaSelecionada()
        exists (Carro( marca.getNome() == $marcaSelecionada, modelo.getNome() == $texto ) from carros)
    then
        System.out.println("Modelo selecionado: " + $texto);
        $resposta.setModeloSelecionado($texto);

        // Cast carros to List<Carro>
        List<Carro> carrosList = (List<Carro>) carros;

        // Listar motores disponíveis para o modelo selecionado
        Set<String> motoresDisponiveis = new HashSet<>();
        for (Carro carro : carrosList) {
            if (carro.getMarca().getNome().equals($marcaSelecionada)
                && carro.getModelo().getNome().equals($texto)) {
                motoresDisponiveis.add(carro.getMotor().getNome());
            }
        }
        System.out.println("Motores disponíveis: ");
        for (String motor : motoresDisponiveis) {
            System.out.println(motor);
        }

        $resposta.setEstado("aguardandoMotor");
        $resposta.setTexto(""); // Limpa o texto para a próxima entrada
        update($resposta);
end

// Rule 05: Pergunta Motor do Carro
rule "R05: Pergunta Motor do Carro"
    when
        $resposta : Resposta(estado == "aguardandoMotor", texto == "")
    then
        System.out.println("Qual é o motor do carro?");
        // Aguarda a entrada do usuário
end

// Rule 06: Verifica Motor Selecionado e Armazena Carro Selecionado
rule "R06: Verifica Motor Selecionado"
    when
        $resposta : Resposta(estado == "aguardandoMotor", $texto : texto != null && texto != "")
        $marcaSelecionada : String() from $resposta.getMarcaSelecionada()
        $modeloSelecionado : String() from $resposta.getModeloSelecionado()
        $carroSelecionado : Carro(
            marca.getNome() == $marcaSelecionada,
            modelo.getNome() == $modeloSelecionado,
            motor.getNome() == $texto
        ) from carros
    then
        System.out.println("Motor selecionado: " + $texto);
        $resposta.setMotorSelecionado($texto);
        $resposta.setCarroSelecionado($carroSelecionado);

        System.out.println("Componentes disponíveis: ");
        for (Componente componente : $carroSelecionado.getComponentes()) {
            System.out.println(componente.getNome() + " (Min Ideal: " + componente.getValorMinimoIdeal() + ", Max Ideal: " + componente.getValorMaximoIdeal() +  ", Unidade: " + componente.getUnidade() + ")");
        }

        $resposta.setEstado("finalizado");
        $resposta.setTexto(""); // Limpa o texto
        update($resposta);
end
