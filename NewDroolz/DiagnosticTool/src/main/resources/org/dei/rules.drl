package org.dei;

import org.dei.facts.Resposta;
import org.dei.facts.model.Carro;
import org.dei.facts.model.Componente;

import java.util.List;
import java.util.ArrayList;
import java.util.Set;
import java.util.HashSet;

global java.util.List carros;
global java.util.List<String> triggeredRules;
global org.slf4j.Logger LOG;

// Rule 00: Lista marcas disponíveis
rule "R00: Lista Marcas Disponíveis"
    when
        $resposta : Resposta(estado == null || estado == "")
    then
        $resposta.setPergunta("Marcas disponíveis: ");
        $resposta.setEstado("aguardandoMarca");
        update($resposta);
end

// Rule 01: Pergunta Marca do Carro
rule "R01: Pergunta Marca do Carro"
    when
        $resposta : Resposta(estado == null || estado == "")
    then
        $resposta.setPergunta("Qual é a marca do carro?");
        $resposta.setEstado("aguardandoMarca");
        update($resposta);
end

// Rule 02: Verifica Marca Selecionada (válida)
rule "R02: Verifica Marca Selecionada"
    when
        $resposta : Resposta(estado == "aguardandoMarca", $texto : texto != null && texto != "")
        exists (Carro( marca.getNome() == $texto ) from carros)
    then
        $resposta.setMarcaSelecionada($texto);
        $resposta.setEstado("aguardandoModelo");
        $resposta.setTexto("");
        update($resposta);
end

// Rule 02b: Marca inválida
rule "R02b: Marca Inválida"
    when
        $resposta : Resposta(estado == "aguardandoMarca", $texto : texto != null && texto != "")
        not (Carro( marca.getNome() == $texto ) from carros)
    then
        $resposta.setPergunta("Marca não encontrada. Por favor, tente novamente.");
        $resposta.setTexto("");
        update($resposta);
end

// Rule 03: Pergunta Modelo do Carro
rule "R03: Pergunta Modelo do Carro"
    when
        $resposta : Resposta(estado == "aguardandoModelo", texto == "")
    then
        $resposta.setPergunta("Qual é o modelo do carro?");
        update($resposta);
end

// Rule 04: Verifica Modelo Selecionado (válido)
rule "R04: Verifica Modelo Selecionado"
    when
        $resposta : Resposta(estado == "aguardandoModelo", $texto : texto != null && texto != "")
        $marcaSelecionada : String() from $resposta.getMarcaSelecionada()
        exists (Carro( marca.getNome() == $marcaSelecionada, modelo.getNome() == $texto ) from carros)
    then
        $resposta.setModeloSelecionado($texto);
        $resposta.setEstado("aguardandoMotor");
        $resposta.setTexto("");
        update($resposta);
end

// Rule 04b: Modelo inválido
rule "R04b: Modelo Inválido"
    when
        $resposta : Resposta(estado == "aguardandoModelo", $texto : texto != null && texto != "")
        $marcaSelecionada : String() from $resposta.getMarcaSelecionada()
        not (Carro( marca.getNome() == $marcaSelecionada, modelo.getNome() == $texto ) from carros)
    then
        $resposta.setPergunta("Modelo não encontrado para a marca selecionada. Por favor, tente novamente.");
        $resposta.setTexto(""); // Limpa o texto para repetir a pergunta
        update($resposta);
end

// Rule 05: Pergunta Motor do Carro
rule "R05: Pergunta Motor do Carro"
    when
        $resposta : Resposta(estado == "aguardandoMotor", texto == "")
    then
        $resposta.setPergunta("Qual é o motor do carro?");
        update($resposta);
end

// Rule 06: Verifica Motor Selecionado e Armazena Carro Selecionado (válido)
rule "R06: Verifica Motor Selecionado"
    when
        $resposta : Resposta(estado == "aguardandoMotor", $texto : texto != null && texto != "")
        $marcaSelecionada : String() from $resposta.getMarcaSelecionada()
        $modeloSelecionado : String() from $resposta.getModeloSelecionado()
        $carroSelecionado : Carro(
            marca.getNome() == $marcaSelecionada,
            modelo.getNome() == $modeloSelecionado,
            motor.getNome() == $texto
        ) from carros
    then
        $resposta.setMotorSelecionado($texto);
        $resposta.setEstado("finalizado");
        $resposta.setTexto("");
        update($resposta);
end

// Rule 06b: Motor inválido
rule "R06b: Motor Inválido"
    when
        $resposta : Resposta(estado == "aguardandoMotor", $texto : texto != null && texto != "")
        $marcaSelecionada : String() from $resposta.getMarcaSelecionada()
        $modeloSelecionado : String() from $resposta.getModeloSelecionado()
        not (Carro(
            marca.getNome() == $marcaSelecionada,
            modelo.getNome() == $modeloSelecionado,
            motor.getNome() == $texto
        ) from carros)
    then
        $resposta.setPergunta("Motor não encontrado para o modelo e marca selecionados. Por favor, tente novamente.");
        $resposta.setTexto(""); // Limpa o texto para repetir a pergunta
        update($resposta);
end
