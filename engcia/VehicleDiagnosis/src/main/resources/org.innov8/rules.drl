/*
 * Copyright 2015 Red Hat, Inc. and/or its affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
*/

package org.innov8;

import org.innov8.model.Evidence;
import org.innov8.model.Hypothesis;
import org.innov8.model.Conclusion;
import org.innov8.model.Fact;

import function org.innov8.view.UI.answer;

query "Conclusions"
	$conclusion : Conclusion()
end

rule "r1"
	when
		eval(answer(Evidence.PROBLEMA_CARRO, "yes" ))
	then
		Hypothesis h = new Hypothesis("car_issue", "type1");
		insert(h);
end

rule "r2"
	when
		eval(answer(Evidence.PROBLEMA_CARRO, "no" ))
	then
		Hypothesis h = new Hypothesis("car_issue", "type2");
		insert(h);
end

rule "r3"
	when
		Hypothesis( description == "car_issue", value == "type1")
		eval(answer(Evidence.CARRO_NAO_LIGA, "yes"))
	then
		Conclusion c = new Conclusion(Conclusion.FAULTY_BATTERY_OR_NO_CHARGE);
		insert(c);
end

rule "r4"
	when
		Hypothesis( description == "car_issue", value == "type1")
		eval(answer(Evidence.VERIFICAR_BATERIA, "yes"))
	then
		Conclusion c = new Conclusion(Conclusion.FAULTY_BATTERY_OR_NO_CHARGE);
		insert(c);
end

rule "r5"
	when
		Hypothesis( description == "car_issue", value == "type1")
		eval(answer(Evidence.MOTOR_ARRANQUE_DEFEITO, "yes"))
	then
		Conclusion c = new Conclusion(Conclusion.FAULTY_STARTING_MOTOR);
		insert(c);
end

rule "r6"
	when
		Hypothesis( description == "car_issue", value == "type2")
		eval(answer(Evidence.IGNICAO_FALHA, "yes"))
	then
		Conclusion c = new Conclusion(Conclusion.FAULTY_IGNITION_SYSTEM);
		insert(c);
end

rule "r7"
	when
		Hypothesis( description == "car_issue", value == "type2")
		eval(answer(Evidence.IMOBILIZADOR_BLOQUEADO, "yes"))
		eval(answer(Evidence.ALARME_BLOQUEADO, "yes"))
	then
		Conclusion c = new Conclusion(Conclusion.SECURITY_SYSTEM_ACTIVATED);
		insert(c);
end

rule "r8"
	when
		Hypothesis( description == "car_issue", value == "type2")
		eval(answer(Evidence.RADIADOR_DEFEITUOSO, "yes"))
		eval(answer(Evidence.VENTOINHA_DEFEITUOSA, "yes"))
	then
		Conclusion c = new Conclusion(Conclusion.FAULTY_RADIATOR_OR_FAN);
		insert(c);
end

rule "r9"
	when
		Hypothesis( description == "car_issue", value == "type2")
		eval(answer(Evidence.ARREFECIMENTO_FUGAS, "yes"))
	then
		Conclusion c = new Conclusion(Conclusion.COOLING_SYSTEM_LEAKING);
		insert(c);
end

rule "r10"
	when
		Hypothesis( description == "car_issue", value == "type2")
		eval(answer(Evidence.TERMOSTATO_DEFEITUOSO, "yes"))
	then
		Conclusion c = new Conclusion(Conclusion.FAULTY_THERMOSTAT);
		insert(c);
end

rule "r11"
	when
		Hypothesis( description == "car_issue", value == "type2")
		eval(answer(Evidence.SISTEMA_COMBUSTIVEL_DEFEITUOSO, "yes"))
	then
		Conclusion c = new Conclusion(Conclusion.FAULTY_FUEL_SYSTEM);
		insert(c);
end

rule "r12"
	when
		Hypothesis( description == "car_issue", value == "type2")
		eval(answer(Evidence.INJECAO_COMBUSTIVEL_DEFEITUOSA, "yes"))
	then
		Conclusion c = new Conclusion(Conclusion.FAULTY_INJECTION_SYSTEM);
		insert(c);
end

rule "unknown"
	when
		not Conclusion()
	then
		Conclusion c = new Conclusion(Conclusion.UNKNOWN);
		insert(c);
end

//query "evidence"(String ev, String v)
//	e : Evidence( evidence == ev, value == v )
//end

