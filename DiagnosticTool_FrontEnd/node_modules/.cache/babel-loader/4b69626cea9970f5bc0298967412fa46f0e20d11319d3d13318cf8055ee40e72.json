{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jorge Cunha\\\\Documents\\\\GitHub\\\\AIAutonomousDriving\\\\frontend\\\\car-diagnosis\\\\src\\\\pages\\\\DiagnosticoCarro.jsx\",\n  _s = $RefreshSig$();\nimport HomeIcon from '@mui/icons-material/Home';\nimport { Alert, Box, Button, Card, CardContent, CircularProgress, Container, IconButton, TextField, Typography } from \"@mui/material\";\nimport React from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport useDiagnostico from '../hooks/useDiagnostico';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DiagnosticoCarro = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    diagnosticoData\n  } = location.state;\n  const {\n    diagnostico,\n    loading,\n    error,\n    handleAnswer\n  } = useDiagnostico(diagnosticoData);\n  if (!diagnosticoData) return null;\n  const marca = diagnostico.carroSelecionado.marca.nome;\n  const modelo = diagnostico.carroSelecionado.modelo.nome;\n  const motor = diagnostico.carroSelecionado.motor.nome;\n  const getImagePath = () => {\n    try {\n      if (marca && modelo) {\n        return require(`../assets/img/carros/${marca}/${modelo}.png`);\n      }\n    } catch (err) {\n      console.error('Imagem não encontrada', err);\n    }\n    return require(`../assets/img/carros/question-car.png`);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          position: 'relative',\n          padding: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'absolute',\n            top: 16,\n            right: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            variant: \"contained\",\n            onClick: () => navigate('/'),\n            color: \"primary\",\n            sx: {\n              color: 'primary',\n              backgroundColor: 'white'\n            },\n            children: /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            gutterBottom: true,\n            children: \"Question\\xE1rio Diagn\\xF3stico\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h2\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: getImagePath(),\n                alt: \"Carro Selecionado\",\n                style: {\n                  width: '300px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), marca, \", \", modelo, \", \", motor]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h3\",\n            sx: {\n              mt: 2\n            },\n            children: diagnostico.pergunta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), diagnostico.pergunta && !loading && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3\n            },\n            children: [diagnostico.pergunta.includes(\"(Sim/Não)\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAnswer(\"Sim\"),\n                variant: \"contained\",\n                color: \"primary\",\n                sx: {\n                  mr: 2\n                },\n                children: \"Sim\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAnswer(\"Não\"),\n                variant: \"contained\",\n                color: \"secondary\",\n                children: \"N\\xE3o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true), diagnostico.pergunta.includes(\"(Baixo/Alto/Normal)\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAnswer(\"Baixo\"),\n                variant: \"contained\",\n                color: \"primary\",\n                sx: {\n                  mr: 2\n                },\n                children: \"Baixo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAnswer(\"Normal\"),\n                variant: \"contained\",\n                color: \"primary\",\n                sx: {\n                  mr: 2\n                },\n                children: \"Normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAnswer(\"Alto\"),\n                variant: \"contained\",\n                color: \"primary\",\n                children: \"Alto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true), diagnostico.pergunta.includes(\"(Minimo/Maximo/Normal)\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAnswer(\"Minimo\"),\n                variant: \"contained\",\n                color: \"primary\",\n                sx: {\n                  mr: 2\n                },\n                children: \"Minimo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAnswer(\"Normal\"),\n                variant: \"contained\",\n                color: \"primary\",\n                sx: {\n                  mr: 2\n                },\n                children: \"Normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAnswer(\"Maximo\"),\n                variant: \"contained\",\n                color: \"primary\",\n                children: \"Maximo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true), diagnostico.pergunta.match(/\\(Entre\\s(\\d+)\\se\\s(\\d+)\\s (\\s+)\\)/) && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                label: \"Digite um valor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 9\n              }, this)\n            }, void 0, false), diagnostico.pergunta.match(/Verifique os seguintes componentes\\:/) && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: diagnostico.pergunta.match(/\\d+/g).map((num, index) => /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAnswer(num),\n                variant: \"contained\",\n                color: \"primary\",\n                sx: {\n                  mr: 2\n                },\n                children: num\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 11\n              }, this)\n              // 1. Bomba de água\n              //   <Button\n              //   onClick={() => handleAnswer(\"0\")}\n              //   variant=\"contained\"\n              //   color=\"primary\">\n              //   0-Nenhum\n              // </Button>\n              )\n            }, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(DiagnosticoCarro, \"hXoI9jSJsdBBMC1Yv2P3MmuNR9s=\", false, function () {\n  return [useLocation, useNavigate, useDiagnostico];\n});\n_c = DiagnosticoCarro;\nexport default DiagnosticoCarro;\n\n// Opções de resposta existentes:\n// (Sim/Não)\n// (Baixo/Alto/Normal)\n// (Minimo/Maximo/Normal)\n// \"Verifique os seguintes componentes:\\n1. Bomba de água\\n2. Alternador\\n3. Compressor de ar condicionado\\n4. Tensores da correia\\nDigite o número correspondente ao componente com defeito, ou 0 se nenhum:\"\n// (Entre \" + oleoMotor.getValorMinimo() + \" e \" + oleoMotor.getValorMaximo() + \" \" + oleoMotor.getUnidade() + \")\n// Qual é o nível atual de óleo? (Entre 0.0 e 8.0 Litros)\n\n// {diagnostico.pergunta && !loading && (\n//   <Box sx={{ mt: 3 }}>\n//     {/* (Sim/Não) */}\n//     {diagnostico.pergunta.includes(\"(Sim/Não)\") && (\n//       <>\n//         <Button\n//           onClick={() => handleAnswer(\"Sim\")}\n//           variant=\"contained\"\n//           color=\"primary\"\n//           sx={{ mr: 2 }}>\n//           Sim\n//         </Button>\n//         <Button\n//           onClick={() => handleAnswer(\"Não\")}\n//           variant=\"contained\"\n//           color=\"secondary\">\n//           Não\n//         </Button>\n//       </>\n//     )}\n\n//     {/* (Baixo/Alto/Normal) */}\n//     {diagnostico.pergunta.includes(\"(Baixo/Alto/Normal)\") && (\n//       <>\n//         <Button\n//           onClick={() => handleAnswer(\"Baixo\")}\n//           variant=\"contained\"\n//           color=\"primary\"\n//           sx={{ mr: 2 }}>\n//           Baixo\n//         </Button>\n//         <Button\n//           onClick={() => handleAnswer(\"Normal\")}\n//           variant=\"contained\"\n//           color=\"primary\"\n//           sx={{ mr: 2 }}>\n//           Normal\n//         </Button>\n//         <Button\n//           onClick={() => handleAnswer(\"Alto\")}\n//           variant=\"contained\"\n//           color=\"primary\">\n//           Alto\n//         </Button>\n//       </>\n//     )}\n\n//     {/* (Minimo/Maximo/Normal) */}\n//     {diagnostico.pergunta.includes(\"(Minimo/Maximo/Normal)\") && (\n//       <>\n//         <Button\n//           onClick={() => handleAnswer(\"Minimo\")}\n//           variant=\"contained\"\n//           color=\"primary\"\n//           sx={{ mr: 2 }}>\n//           Minimo\n//         </Button>\n//         <Button\n//           onClick={() => handleAnswer(\"Normal\")}\n//           variant=\"contained\"\n//           color=\"primary\"\n//           sx={{ mr: 2 }}>\n//           Normal\n//         </Button>\n//         <Button\n//           onClick={() => handleAnswer(\"Maximo\")}\n//           variant=\"contained\"\n//           color=\"primary\">\n//           Maximo\n//         </Button>\n//       </>\n//     )}\n\n//     {/* (Entre \"numero\" e \"outro numero\" \"unidade\") */}\n//     {diagnostico.pergunta.match(/\\(Entre\\s(\\d+)\\se\\s(\\d+)\\s (\\s+)\\)/) && (\n//       <>\n//         {diagnostico.pergunta.match(/\\d+/g).map((num, index) => (\n//           <Button\n//             key={index}\n//             onClick={() => handleAnswer(num)}\n//             variant=\"contained\"\n//             color=\"primary\"\n//             sx={{ mr: 2 }}>\n//             {num}\n//           </Button>\n//         ))}\n//       </>\n//     )}\n//   </Box>\n// )}\nvar _c;\n$RefreshReg$(_c, \"DiagnosticoCarro\");","map":{"version":3,"names":["HomeIcon","Alert","Box","Button","Card","CardContent","CircularProgress","Container","IconButton","TextField","Typography","React","useLocation","useNavigate","useDiagnostico","jsxDEV","_jsxDEV","Fragment","_Fragment","DiagnosticoCarro","_s","location","navigate","diagnosticoData","state","diagnostico","loading","error","handleAnswer","marca","carroSelecionado","nome","modelo","motor","getImagePath","require","err","console","children","display","justifyContent","alignItems","minHeight","sx","position","padding","top","right","variant","onClick","color","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","component","gutterBottom","mt","src","alt","style","width","pergunta","severity","includes","mr","match","label","map","num","index","_c","$RefreshReg$"],"sources":["C:/Users/Jorge Cunha/Documents/GitHub/AIAutonomousDriving/frontend/car-diagnosis/src/pages/DiagnosticoCarro.jsx"],"sourcesContent":["import HomeIcon from '@mui/icons-material/Home';\r\nimport { Alert, Box, Button, Card, CardContent, CircularProgress, Container, IconButton, TextField, Typography } from \"@mui/material\";\r\nimport React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport useDiagnostico from '../hooks/useDiagnostico';\r\n\r\nconst DiagnosticoCarro = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const { diagnosticoData } = location.state;\r\n  const { diagnostico, loading, error, handleAnswer } = useDiagnostico(diagnosticoData);\r\n\r\n  if (!diagnosticoData) return null;\r\n\r\n  const marca = diagnostico.carroSelecionado.marca.nome;\r\n  const modelo = diagnostico.carroSelecionado.modelo.nome;\r\n  const motor = diagnostico.carroSelecionado.motor.nome;\r\n\r\n  const getImagePath = () => {\r\n    try {\r\n      if (marca && modelo) {\r\n        return require(`../assets/img/carros/${marca}/${modelo}.png`);\r\n      }\r\n    } catch (err) {\r\n      console.error('Imagem não encontrada', err);\r\n    }\r\n    return require(`../assets/img/carros/question-car.png`);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        minHeight=\"100vh\"\r\n      >\r\n        <Card sx={{ position: 'relative', padding: 2 }}>\r\n          <Box sx={{ position: 'absolute', top: 16, right: 16}}>\r\n            <IconButton\r\n              variant=\"contained\"\r\n              onClick={()=>navigate('/')}\r\n              color='primary'\r\n              sx={{ color: 'primary', backgroundColor: 'white'}}\r\n            ><HomeIcon /></IconButton>\r\n          </Box>\r\n          <CardContent>\r\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n              Questionário Diagnóstico\r\n            </Typography>\r\n\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              <Box mt={2}>\r\n                <img src={getImagePath()} alt=\"Carro Selecionado\" style={{ width: '300px' }} />\r\n              </Box>\r\n              {marca}, {modelo}, {motor}\r\n            </Typography>\r\n\r\n            <Typography variant=\"h4\" component=\"h3\" sx={{ mt: 2 }}>\r\n              {diagnostico.pergunta}\r\n            </Typography>\r\n\r\n            {loading && (\r\n              <Box sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\r\n                <CircularProgress />\r\n              </Box>\r\n            )}\r\n\r\n            {error && (\r\n              <Box sx={{ mt: 2 }}>\r\n                <Alert severity=\"error\">{error}</Alert>\r\n              </Box>\r\n            )}\r\n\r\n            {/* {diagnostico.pergunta.includes(\"(Sim/Não)\") && !loading && (\r\n              <Box sx={{ mt: 3 }}>\r\n                <Button \r\n                  onClick={() => handleAnswer(\"Sim\")}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  sx={{ mr: 2 }}>\r\n                  Sim\r\n                </Button>\r\n                <Button \r\n                  onClick={() => handleAnswer(\"Não\")}\r\n                  variant=\"contained\"\r\n                  color=\"secondary\">\r\n                  Não\r\n                </Button>\r\n              </Box>\r\n            )} */}\r\n\r\n{diagnostico.pergunta && !loading && (\r\n  <Box sx={{ mt: 3 }}>\r\n    {/* (Sim/Não) */}\r\n    {diagnostico.pergunta.includes(\"(Sim/Não)\") && (\r\n      <>\r\n        <Button\r\n          onClick={() => handleAnswer(\"Sim\")}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          sx={{ mr: 2 }}>\r\n          Sim\r\n        </Button>\r\n        <Button\r\n          onClick={() => handleAnswer(\"Não\")}\r\n          variant=\"contained\"\r\n          color=\"secondary\">\r\n          Não\r\n        </Button>\r\n      </>\r\n    )}\r\n\r\n    {/* (Baixo/Alto/Normal) */}\r\n    {diagnostico.pergunta.includes(\"(Baixo/Alto/Normal)\") && (\r\n      <>\r\n        <Button\r\n          onClick={() => handleAnswer(\"Baixo\")}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          sx={{ mr: 2 }}>\r\n          Baixo\r\n        </Button>\r\n        <Button\r\n          onClick={() => handleAnswer(\"Normal\")}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          sx={{ mr: 2 }}>\r\n          Normal\r\n        </Button>\r\n        <Button\r\n          onClick={() => handleAnswer(\"Alto\")}\r\n          variant=\"contained\"\r\n          color=\"primary\">\r\n          Alto\r\n        </Button>\r\n      </>\r\n    )}\r\n\r\n    {/* (Minimo/Maximo/Normal) */}\r\n    {diagnostico.pergunta.includes(\"(Minimo/Maximo/Normal)\") && (\r\n      <>\r\n        <Button\r\n          onClick={() => handleAnswer(\"Minimo\")}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          sx={{ mr: 2 }}>\r\n          Minimo\r\n        </Button>\r\n        <Button\r\n          onClick={() => handleAnswer(\"Normal\")}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          sx={{ mr: 2 }}>\r\n          Normal\r\n        </Button>\r\n        <Button\r\n          onClick={() => handleAnswer(\"Maximo\")}\r\n          variant=\"contained\"\r\n          color=\"primary\">\r\n          Maximo\r\n        </Button>\r\n      </>\r\n    )}\r\n\r\n    {/* (Entre \"numero\" e \"outro numero\" \"unidade\") */}\r\n    {diagnostico.pergunta.match(/\\(Entre\\s(\\d+)\\se\\s(\\d+)\\s (\\s+)\\)/) && (\r\n      <>\r\n        <TextField label=\"Digite um valor\"/>\r\n        {/* <Button\r\n          onClick={() => handleAnswer(\"Maximo\")\r\n          variant=\"contained\"\r\n          color=\"primary\">\r\n        Enviar resposta\r\n        </Button> */}\r\n      </>\r\n    )}\r\n\r\n    {/* Seleção de uma lista de componentes */}\r\n    {diagnostico.pergunta.match(/Verifique os seguintes componentes\\:/) && (\r\n      <>\r\n        {diagnostico.pergunta.match(/\\d+/g).map((num, index) => (\r\n          <Button\r\n            key={index}\r\n            onClick={() => handleAnswer(num)}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            sx={{ mr: 2 }}>\r\n            {num}\r\n          </Button>\r\n          // 1. Bomba de água\r\n        //   <Button\r\n        //   onClick={() => handleAnswer(\"0\")}\r\n        //   variant=\"contained\"\r\n        //   color=\"primary\">\r\n        //   0-Nenhum\r\n        // </Button>\r\n        ))}\r\n      </>\r\n    )}\r\n  </Box>\r\n)}\r\n\r\n          </CardContent>\r\n\r\n          {/* DEBUG */}\r\n          {/* <CardContent>\r\n            <Typography variant=\"body1\" gutterBottom>\r\n              JSON response:\r\n            </Typography>\r\n            <Box\r\n              component=\"pre\"\r\n              sx={{\r\n                whiteSpace: 'pre-wrap',\r\n                wordWrap: 'break-word',\r\n                backgroundColor: 'black',\r\n                padding: '10px',\r\n                borderRadius: '5px',\r\n                overflowX: 'auto',\r\n                maxHeight: '500px',\r\n              }}\r\n            >\r\n              {JSON.stringify(diagnostico, null, 2)}\r\n            </Box>\r\n          </CardContent> */}\r\n\r\n        </Card>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DiagnosticoCarro;\r\n\r\n// Opções de resposta existentes:\r\n// (Sim/Não)\r\n// (Baixo/Alto/Normal)\r\n// (Minimo/Maximo/Normal)\r\n// \"Verifique os seguintes componentes:\\n1. Bomba de água\\n2. Alternador\\n3. Compressor de ar condicionado\\n4. Tensores da correia\\nDigite o número correspondente ao componente com defeito, ou 0 se nenhum:\"\r\n// (Entre \" + oleoMotor.getValorMinimo() + \" e \" + oleoMotor.getValorMaximo() + \" \" + oleoMotor.getUnidade() + \")\r\n// Qual é o nível atual de óleo? (Entre 0.0 e 8.0 Litros)\r\n\r\n// {diagnostico.pergunta && !loading && (\r\n//   <Box sx={{ mt: 3 }}>\r\n//     {/* (Sim/Não) */}\r\n//     {diagnostico.pergunta.includes(\"(Sim/Não)\") && (\r\n//       <>\r\n//         <Button\r\n//           onClick={() => handleAnswer(\"Sim\")}\r\n//           variant=\"contained\"\r\n//           color=\"primary\"\r\n//           sx={{ mr: 2 }}>\r\n//           Sim\r\n//         </Button>\r\n//         <Button\r\n//           onClick={() => handleAnswer(\"Não\")}\r\n//           variant=\"contained\"\r\n//           color=\"secondary\">\r\n//           Não\r\n//         </Button>\r\n//       </>\r\n//     )}\r\n\r\n//     {/* (Baixo/Alto/Normal) */}\r\n//     {diagnostico.pergunta.includes(\"(Baixo/Alto/Normal)\") && (\r\n//       <>\r\n//         <Button\r\n//           onClick={() => handleAnswer(\"Baixo\")}\r\n//           variant=\"contained\"\r\n//           color=\"primary\"\r\n//           sx={{ mr: 2 }}>\r\n//           Baixo\r\n//         </Button>\r\n//         <Button\r\n//           onClick={() => handleAnswer(\"Normal\")}\r\n//           variant=\"contained\"\r\n//           color=\"primary\"\r\n//           sx={{ mr: 2 }}>\r\n//           Normal\r\n//         </Button>\r\n//         <Button\r\n//           onClick={() => handleAnswer(\"Alto\")}\r\n//           variant=\"contained\"\r\n//           color=\"primary\">\r\n//           Alto\r\n//         </Button>\r\n//       </>\r\n//     )}\r\n\r\n//     {/* (Minimo/Maximo/Normal) */}\r\n//     {diagnostico.pergunta.includes(\"(Minimo/Maximo/Normal)\") && (\r\n//       <>\r\n//         <Button\r\n//           onClick={() => handleAnswer(\"Minimo\")}\r\n//           variant=\"contained\"\r\n//           color=\"primary\"\r\n//           sx={{ mr: 2 }}>\r\n//           Minimo\r\n//         </Button>\r\n//         <Button\r\n//           onClick={() => handleAnswer(\"Normal\")}\r\n//           variant=\"contained\"\r\n//           color=\"primary\"\r\n//           sx={{ mr: 2 }}>\r\n//           Normal\r\n//         </Button>\r\n//         <Button\r\n//           onClick={() => handleAnswer(\"Maximo\")}\r\n//           variant=\"contained\"\r\n//           color=\"primary\">\r\n//           Maximo\r\n//         </Button>\r\n//       </>\r\n//     )}\r\n\r\n//     {/* (Entre \"numero\" e \"outro numero\" \"unidade\") */}\r\n//     {diagnostico.pergunta.match(/\\(Entre\\s(\\d+)\\se\\s(\\d+)\\s (\\s+)\\)/) && (\r\n//       <>\r\n//         {diagnostico.pergunta.match(/\\d+/g).map((num, index) => (\r\n//           <Button\r\n//             key={index}\r\n//             onClick={() => handleAnswer(num)}\r\n//             variant=\"contained\"\r\n//             color=\"primary\"\r\n//             sx={{ mr: 2 }}>\r\n//             {num}\r\n//           </Button>\r\n//         ))}\r\n//       </>\r\n//     )}\r\n//   </Box>\r\n// )}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}