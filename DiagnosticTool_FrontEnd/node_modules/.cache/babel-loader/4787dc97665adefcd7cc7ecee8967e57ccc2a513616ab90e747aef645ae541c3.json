{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jorge Cunha\\\\Documents\\\\GitHub\\\\AIAutonomousDriving\\\\DiagnosticTool_FrontEnd\\\\src\\\\pages\\\\SelecaoCarro.jsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, FormControl, Grid, InputLabel, List, ListItem, MenuItem, Select, Typography } from \"@mui/material\";\nimport axios from 'axios';\nimport * as React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport CardWrapper from \"../components/CardWrapper\";\nimport Gauge from \"../components/Gauge\";\nimport TituloLinha from \"../components/TituloLinha\";\nimport { getApiUrl, getSistemaSelecionado } from '../config/apiConfig';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SelecaoCarro = () => {\n  _s();\n  const sistemaSelecionado = getSistemaSelecionado();\n  const API_URL = getApiUrl();\n  const navigate = useNavigate();\n  const [carData, setCarData] = useState([]);\n  const [marca, setMarca] = useState('');\n  const [modelo, setModelo] = useState('');\n  const [motor, setMotor] = useState('');\n  const [modelos, setModelos] = useState([]);\n  const [motores, setMotores] = useState([]);\n  const [componentes, setComponentes] = useState([]);\n  const [error, setError] = useState(null);\n  const tamanho_img = '280px';\n  useEffect(() => {\n    const fetchCarData = async () => {\n      try {\n        const response = await axios.get(`${API_URL}/carros`);\n        setCarData(response.data);\n      } catch (error) {\n        console.error(`Erro carregando dados da API ${sistemaSelecionado}`, error);\n      }\n    };\n    fetchCarData();\n  }, [API_URL]);\n  const marcas = [...new Set(carData.map(car => car.marca.nome))];\n  const handleMarcaChange = e => {\n    const selectedMarca = e.target.value;\n    setMarca(selectedMarca);\n    setModelo('');\n    setMotor('');\n    const filteredModelos = carData.filter(car => car.marca.nome === selectedMarca);\n    const uniqueModelos = [...new Set(filteredModelos.map(car => car.modelo.nome))];\n    setModelos(uniqueModelos);\n    setMotores([]);\n    setComponentes([]);\n  };\n  const handleModeloChange = e => {\n    const selectedModelo = e.target.value;\n    setModelo(selectedModelo);\n    setMotor('');\n    const filteredMotores = carData.filter(car => car.marca.nome === marca && car.modelo.nome === selectedModelo);\n    const uniqueMotores = [...new Set(filteredMotores.map(car => car.motor.nome))];\n    setMotores(uniqueMotores);\n    setComponentes([]);\n  };\n  const handleMotorChange = e => {\n    const selectedMotor = e.target.value;\n    setMotor(selectedMotor);\n    const filteredCar = carData.find(car => car.marca.nome === marca && car.modelo.nome === modelo && car.motor.nome === selectedMotor);\n    setComponentes(filteredCar ? filteredCar.componentes : []);\n  };\n  const iniciarDiagnostico = async () => {\n    let body;\n    let url;\n    let prolog_response;\n\n    // PARA PROLOG\n    if (sistemaSelecionado === \"PROLOG\") {\n      // obterNumeroCarro\n      url = `${API_URL}/obterNumeroCarro`; // http://localhost:4040/obterNumeroCarro\n      body = {\n        marca: marca,\n        modelo: modelo,\n        motor: motor,\n        componentes: componentes\n      };\n      try {\n        // selecionarCarro\n        prolog_response = await axios.post(url, body);\n        const numeroCarro = prolog_response.data.numero;\n\n        //console.log(\">>>> numeroCarro: \" + numeroCarro);\n\n        url = `${API_URL}/selecionarCarro`; // http://localhost:4040/selecionarCarro\n        body = {\n          numero: numeroCarro\n        };\n        prolog_response = await axios.post(url, body);\n        //console.log(\">>>> carro_escolhido: \" + carro_escolhido);\n\n        navigate('/diagnostico/prolog', {\n          state: {\n            diagnosticoData: prolog_response.data\n          }\n        });\n      } catch (err) {\n        setError('Falha ao iniciar diagnostico');\n      }\n\n      // PARA DROOLS\n    } else if (sistemaSelecionado === \"Drools\") {\n      url = `${API_URL}/diagnostico/iniciar`;\n      body = {\n        marca: {\n          nome: marca\n        },\n        modelo: {\n          nome: modelo\n        },\n        motor: {\n          nome: motor\n        },\n        componentes: componentes\n      };\n      try {\n        const response = await axios.post(url, body);\n        navigate('/diagnostico', {\n          state: {\n            diagnosticoData: response.data\n          }\n        });\n      } catch (err) {\n        setError(`Falha ao iniciar diagnostico: ${url}`);\n      }\n    } else {\n      setError('Sistema não suportado');\n      return;\n    }\n  };\n  const getImagePath = () => {\n    try {\n      if (marca && modelo) {\n        return require(`../assets/img/carros/${marca}/${modelo}.png`);\n      }\n    } catch (err) {\n      console.error('Imagem não encontrada', err);\n    }\n    return require(`../assets/img/carros/question-car.png`);\n  };\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    titulo: `Diagnóstico de Carro`,\n    children: [/*#__PURE__*/_jsxDEV(TituloLinha, {\n      title: \"Selecione o Carro\",\n      lineColor: \"white\",\n      icon: \"InfoTwoTone\",\n      position: \"13px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      padding: 2,\n      sx: {\n        width: '850px',\n        margin: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        sx: {\n          width: tamanho_img,\n          margin: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          sx: {\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: getImagePath(),\n            alt: \"Carro Selecionado\",\n            style: {\n              width: tamanho_img\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        sx: {\n          height: '220px',\n          margin: 'auto'\n        },\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Marca\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: marca,\n                onChange: handleMarcaChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"Selecione a Marca\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 167,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 19\n                }, this), marcas.map((m, idx) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: m,\n                  children: m\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: modelos.length > 0 && /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Modelo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: modelo,\n                onChange: handleModeloChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"Selecione o Modelo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 21\n                }, this), modelos.map((m, idx) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: m,\n                  children: m\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: motores.length > 0 && /*#__PURE__*/_jsxDEV(FormControl, {\n              fullWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                children: \"Motor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                value: motor,\n                onChange: handleMotorChange,\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  children: /*#__PURE__*/_jsxDEV(\"em\", {\n                    children: \"Selecione o Motor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 21\n                }, this), motores.map((m, idx) => /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: m,\n                  children: m\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 23\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), componentes.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      padding: 2,\n      children: [/*#__PURE__*/_jsxDEV(TituloLinha, {\n        title: \"N\\xEDveis Ideais dos Componentes\",\n        lineColor: \"white\",\n        icon: \"BuildCircleTwoTone\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: componentes.map((comp, idx) => {\n            var _comp$valorMinimoIdea, _comp$valorMinimo, _comp$valorMaximo, _comp$valorMaximoIdea, _comp$nome$replace, _comp$unidade;\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Gauge, {\n                value: (_comp$valorMinimoIdea = comp.valorMinimoIdeal) !== null && _comp$valorMinimoIdea !== void 0 ? _comp$valorMinimoIdea : comp.minIdeal,\n                min: (_comp$valorMinimo = comp.valorMinimo) !== null && _comp$valorMinimo !== void 0 ? _comp$valorMinimo : comp.min,\n                max: (_comp$valorMaximo = comp.valorMaximo) !== null && _comp$valorMaximo !== void 0 ? _comp$valorMaximo : comp.max,\n                max_ideal: (_comp$valorMaximoIdea = comp.valorMaximoIdeal) !== null && _comp$valorMaximoIdea !== void 0 ? _comp$valorMaximoIdea : comp.maxIdeal,\n                label: (_comp$nome$replace = comp.nome.replace(/_/g, \" \")) !== null && _comp$nome$replace !== void 0 ? _comp$nome$replace : \"N/A\" // substitui o \"_\" por \" \" (espaço)\n                ,\n                units: (_comp$unidade = comp.unidade) !== null && _comp$unidade !== void 0 ? _comp$unidade : \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 21\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }, this), marca && modelo && motor && componentes.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          height: '0.5px',\n          width: \"100%\",\n          background: 'white',\n          marginBottom: '30px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: iniciarDiagnostico,\n          color: \"primary\",\n          variant: \"contained\",\n          sx: {\n            width: '300px',\n            height: '50px',\n            fontSize: '1.2rem'\n          },\n          children: \"Iniciar Diagnostico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), error && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"caption\",\n      color: \"error\",\n      gutterBottom: true,\n      sx: {\n        display: 'block'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(SelecaoCarro, \"bRky/OGFNOC3NrH8tzJo1TBcOCs=\", false, function () {\n  return [useNavigate];\n});\n_c = SelecaoCarro;\nexport default SelecaoCarro;\nvar _c;\n$RefreshReg$(_c, \"SelecaoCarro\");","map":{"version":3,"names":["Box","Button","FormControl","Grid","InputLabel","List","ListItem","MenuItem","Select","Typography","axios","React","useEffect","useState","useNavigate","CardWrapper","Gauge","TituloLinha","getApiUrl","getSistemaSelecionado","jsxDEV","_jsxDEV","Fragment","_Fragment","SelecaoCarro","_s","sistemaSelecionado","API_URL","navigate","carData","setCarData","marca","setMarca","modelo","setModelo","motor","setMotor","modelos","setModelos","motores","setMotores","componentes","setComponentes","error","setError","tamanho_img","fetchCarData","response","get","data","console","marcas","Set","map","car","nome","handleMarcaChange","e","selectedMarca","target","value","filteredModelos","filter","uniqueModelos","handleModeloChange","selectedModelo","filteredMotores","uniqueMotores","handleMotorChange","selectedMotor","filteredCar","find","iniciarDiagnostico","body","url","prolog_response","post","numeroCarro","numero","state","diagnosticoData","err","getImagePath","require","titulo","children","title","lineColor","icon","position","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","padding","sx","width","margin","item","xs","md","mt","display","justifyContent","alignItems","src","alt","style","height","fullWidth","onChange","m","idx","length","comp","_comp$valorMinimoIdea","_comp$valorMinimo","_comp$valorMaximo","_comp$valorMaximoIdea","_comp$nome$replace","_comp$unidade","valorMinimoIdeal","minIdeal","min","valorMinimo","max","valorMaximo","max_ideal","valorMaximoIdeal","maxIdeal","label","replace","units","unidade","background","marginBottom","onClick","color","variant","fontSize","gutterBottom","_c","$RefreshReg$"],"sources":["C:/Users/Jorge Cunha/Documents/GitHub/AIAutonomousDriving/DiagnosticTool_FrontEnd/src/pages/SelecaoCarro.jsx"],"sourcesContent":["import { Box, Button, FormControl, Grid, InputLabel, List, ListItem, MenuItem, Select, Typography } from \"@mui/material\";\r\nimport axios from 'axios';\r\nimport * as React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport CardWrapper from \"../components/CardWrapper\";\r\nimport Gauge from \"../components/Gauge\";\r\nimport TituloLinha from \"../components/TituloLinha\";\r\nimport { getApiUrl, getSistemaSelecionado } from '../config/apiConfig';\r\n\r\nconst SelecaoCarro = () => {\r\n  const sistemaSelecionado = getSistemaSelecionado();\r\n  const API_URL = getApiUrl();\r\n  const navigate = useNavigate();\r\n\r\n  const [carData, setCarData] = useState([]);\r\n  const [marca, setMarca] = useState('');\r\n  const [modelo, setModelo] = useState('');\r\n  const [motor, setMotor] = useState('');\r\n  const [modelos, setModelos] = useState([]);\r\n  const [motores, setMotores] = useState([]);\r\n  const [componentes, setComponentes] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  const tamanho_img = '280px';\r\n\r\n  useEffect(() => {\r\n    const fetchCarData = async () => {\r\n      try {\r\n        const response = await axios.get(`${API_URL}/carros`);\r\n        setCarData(response.data);\r\n      } catch (error) {\r\n        console.error(`Erro carregando dados da API ${sistemaSelecionado}`, error);\r\n      }\r\n    };\r\n    fetchCarData();\r\n  }, [API_URL]);\r\n\r\n  const marcas = [...new Set(carData.map(car => car.marca.nome))];\r\n\r\n  const handleMarcaChange = (e) => {\r\n    const selectedMarca = e.target.value;\r\n    setMarca(selectedMarca);\r\n    setModelo('');\r\n    setMotor('');\r\n\r\n    const filteredModelos = carData.filter(car => car.marca.nome === selectedMarca);\r\n    const uniqueModelos = [...new Set(filteredModelos.map(car => car.modelo.nome))];\r\n    setModelos(uniqueModelos);\r\n    setMotores([]);\r\n    setComponentes([]);\r\n  };\r\n\r\n  const handleModeloChange = (e) => {\r\n    const selectedModelo = e.target.value;\r\n    setModelo(selectedModelo);\r\n    setMotor('');\r\n\r\n    const filteredMotores = carData.filter(car => car.marca.nome === marca && car.modelo.nome === selectedModelo);\r\n    const uniqueMotores = [...new Set(filteredMotores.map(car => car.motor.nome))];\r\n    setMotores(uniqueMotores);\r\n    setComponentes([]);\r\n  };\r\n\r\n  const handleMotorChange = (e) => {\r\n    const selectedMotor = e.target.value;\r\n    setMotor(selectedMotor);\r\n\r\n    const filteredCar = carData.find(car => car.marca.nome === marca && car.modelo.nome === modelo && car.motor.nome === selectedMotor);\r\n    setComponentes(filteredCar ? filteredCar.componentes : []);\r\n  };\r\n\r\n  const iniciarDiagnostico = async () => {\r\n    let body;\r\n    let url;\r\n    let prolog_response;\r\n\r\n    // PARA PROLOG\r\n    if (sistemaSelecionado === \"PROLOG\") {\r\n\r\n      // obterNumeroCarro\r\n        url = `${API_URL}/obterNumeroCarro`; // http://localhost:4040/obterNumeroCarro\r\n        body = {\r\n            marca: marca ,\r\n            modelo:  modelo ,\r\n            motor: motor ,\r\n            componentes: componentes,\r\n        };\r\n\r\n        try {\r\n          \r\n          // selecionarCarro\r\n          prolog_response = await axios.post(url, body);\r\n          const numeroCarro = prolog_response.data.numero;\r\n\r\n          //console.log(\">>>> numeroCarro: \" + numeroCarro);\r\n\r\n          url = `${API_URL}/selecionarCarro`; // http://localhost:4040/selecionarCarro\r\n          body = {\r\n            numero: numeroCarro,\r\n          };\r\n\r\n\r\n          prolog_response = await axios.post(url, body);\r\n          //console.log(\">>>> carro_escolhido: \" + carro_escolhido);\r\n\r\n          navigate('/diagnostico/prolog', { state: { diagnosticoData: prolog_response.data } });\r\n\r\n        } catch (err) {\r\n            setError('Falha ao iniciar diagnostico');\r\n        }\r\n\r\n    // PARA DROOLS\r\n    } else if (sistemaSelecionado === \"Drools\") {\r\n      \r\n        url = `${API_URL}/diagnostico/iniciar`;\r\n        body = {\r\n            marca: { nome: marca },\r\n            modelo: { nome: modelo },\r\n            motor: { nome: motor },\r\n            componentes: componentes,\r\n        };\r\n\r\n        try {\r\n          const response = await axios.post(url, body);\r\n          navigate('/diagnostico', { state: { diagnosticoData: response.data } });\r\n        } catch (err) {\r\n            setError(`Falha ao iniciar diagnostico: ${url}`);\r\n        }\r\n\r\n    } else {\r\n        setError('Sistema não suportado');\r\n        return;\r\n    }\r\n};\r\n\r\n  const getImagePath = () => {\r\n    try {\r\n      if (marca && modelo) {\r\n        return require(`../assets/img/carros/${marca}/${modelo}.png`);\r\n      }\r\n    } catch (err) {\r\n      console.error('Imagem não encontrada', err);\r\n    }\r\n    return require(`../assets/img/carros/question-car.png`);\r\n  };\r\n\r\n  return (\r\n    <CardWrapper titulo={`Diagnóstico de Carro`}>\r\n\r\n      <TituloLinha title=\"Selecione o Carro\" lineColor=\"white\" icon=\"InfoTwoTone\" position=\"13px\" />\r\n\r\n      <Grid container spacing={2} padding={2} sx={{ width: '850px', margin: 'auto'}}>\r\n        <Grid item xs={12} md={6} sx={{ width:tamanho_img, margin: 'auto'}}>\r\n          <Box mt={2} sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            <img src={getImagePath()} alt=\"Carro Selecionado\" style={{ width:tamanho_img }} />\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6} sx={{ height:'220px', margin: 'auto'}}>\r\n          <List>\r\n            <ListItem>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Marca</InputLabel>\r\n                <Select value={marca} onChange={handleMarcaChange}>\r\n                  <MenuItem value=\"\">\r\n                    <em>Selecione a Marca</em>\r\n                  </MenuItem>\r\n                  {marcas.map((m, idx) => (\r\n                    <MenuItem key={idx} value={m}>\r\n                      {m}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </ListItem>\r\n\r\n            <ListItem>\r\n              {modelos.length > 0 && (\r\n                <FormControl fullWidth>\r\n                  <InputLabel>Modelo</InputLabel>\r\n                  <Select value={modelo} onChange={handleModeloChange}>\r\n                    <MenuItem value=\"\">\r\n                      <em>Selecione o Modelo</em>\r\n                    </MenuItem>\r\n                    {modelos.map((m, idx) => (\r\n                      <MenuItem key={idx} value={m}>\r\n                        {m}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              )}\r\n            </ListItem>\r\n\r\n            <ListItem>\r\n              {motores.length > 0 && (\r\n                <FormControl fullWidth>\r\n                  <InputLabel>Motor</InputLabel>\r\n                  <Select value={motor} onChange={handleMotorChange}>\r\n                    <MenuItem value=\"\">\r\n                      <em>Selecione o Motor</em>\r\n                    </MenuItem>\r\n                    {motores.map((m, idx) => (\r\n                      <MenuItem key={idx} value={m}>\r\n                        {m}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                )}\r\n              </ListItem>\r\n            </List>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {componentes.length > 0 && (\r\n          <Box mt={2} padding={2}>\r\n\r\n            <TituloLinha title=\"Níveis Ideais dos Componentes\" lineColor=\"white\" icon=\"BuildCircleTwoTone\"/>\r\n\r\n            <Box>\r\n              <Grid container spacing={2}>\r\n                {componentes.map((comp, idx) => (\r\n                  <Grid item xs={12} md={3} key={idx}>\r\n                    {/* Se valores Drools forem undefined (??), mostra os valores Prolog */}\r\n                    <Gauge\r\n                      value={comp.valorMinimoIdeal ?? comp.minIdeal}\r\n                      min={comp.valorMinimo ?? comp.min}\r\n                      max={comp.valorMaximo ?? comp.max}\r\n                      max_ideal={comp.valorMaximoIdeal ?? comp.maxIdeal}\r\n                      label={comp.nome.replace(/_/g, \" \") ?? \"N/A\"} // substitui o \"_\" por \" \" (espaço)\r\n                      units={comp.unidade ?? \"N/A\"}\r\n                    />\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n        )}\r\n          \r\n        {marca && modelo && motor && componentes.length > 0 && (\r\n          <>\r\n            <Box sx={{ height: '0.5px', width: \"100%\", background: 'white', marginBottom: '30px'}} />\r\n\r\n            <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n              <Button\r\n                onClick={iniciarDiagnostico}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n                sx={{ width: '300px', height: '50px', fontSize: '1.2rem' }}\r\n              >\r\n                Iniciar Diagnostico\r\n              </Button>\r\n            </Box>\r\n          </>\r\n        )}\r\n      {error && (\r\n        <Typography variant=\"caption\" color=\"error\" gutterBottom sx={{ display: 'block' }}>\r\n          {error}\r\n        </Typography>\r\n      )}\r\n    </CardWrapper>\r\n  );\r\n};\r\n\r\nexport default SelecaoCarro;\r\n"],"mappings":";;AAAA,SAASA,GAAG,EAAEC,MAAM,EAAEC,WAAW,EAAEC,IAAI,EAAEC,UAAU,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AACxH,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,SAAS,EAAEC,qBAAqB,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvE,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,kBAAkB,GAAGP,qBAAqB,CAAC,CAAC;EAClD,MAAMQ,OAAO,GAAGT,SAAS,CAAC,CAAC;EAC3B,MAAMU,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACsB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC0B,OAAO,EAAEC,UAAU,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC4B,WAAW,EAAEC,cAAc,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC8B,KAAK,EAAEC,QAAQ,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMgC,WAAW,GAAG,OAAO;EAE3BjC,SAAS,CAAC,MAAM;IACd,MAAMkC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMrC,KAAK,CAACsC,GAAG,CAAC,GAAGrB,OAAO,SAAS,CAAC;QACrDG,UAAU,CAACiB,QAAQ,CAACE,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAON,KAAK,EAAE;QACdO,OAAO,CAACP,KAAK,CAAC,gCAAgCjB,kBAAkB,EAAE,EAAEiB,KAAK,CAAC;MAC5E;IACF,CAAC;IACDG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACnB,OAAO,CAAC,CAAC;EAEb,MAAMwB,MAAM,GAAG,CAAC,GAAG,IAAIC,GAAG,CAACvB,OAAO,CAACwB,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACvB,KAAK,CAACwB,IAAI,CAAC,CAAC,CAAC;EAE/D,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,aAAa,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IACpC5B,QAAQ,CAAC0B,aAAa,CAAC;IACvBxB,SAAS,CAAC,EAAE,CAAC;IACbE,QAAQ,CAAC,EAAE,CAAC;IAEZ,MAAMyB,eAAe,GAAGhC,OAAO,CAACiC,MAAM,CAACR,GAAG,IAAIA,GAAG,CAACvB,KAAK,CAACwB,IAAI,KAAKG,aAAa,CAAC;IAC/E,MAAMK,aAAa,GAAG,CAAC,GAAG,IAAIX,GAAG,CAACS,eAAe,CAACR,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACrB,MAAM,CAACsB,IAAI,CAAC,CAAC,CAAC;IAC/EjB,UAAU,CAACyB,aAAa,CAAC;IACzBvB,UAAU,CAAC,EAAE,CAAC;IACdE,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAMsB,kBAAkB,GAAIP,CAAC,IAAK;IAChC,MAAMQ,cAAc,GAAGR,CAAC,CAACE,MAAM,CAACC,KAAK;IACrC1B,SAAS,CAAC+B,cAAc,CAAC;IACzB7B,QAAQ,CAAC,EAAE,CAAC;IAEZ,MAAM8B,eAAe,GAAGrC,OAAO,CAACiC,MAAM,CAACR,GAAG,IAAIA,GAAG,CAACvB,KAAK,CAACwB,IAAI,KAAKxB,KAAK,IAAIuB,GAAG,CAACrB,MAAM,CAACsB,IAAI,KAAKU,cAAc,CAAC;IAC7G,MAAME,aAAa,GAAG,CAAC,GAAG,IAAIf,GAAG,CAACc,eAAe,CAACb,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACnB,KAAK,CAACoB,IAAI,CAAC,CAAC,CAAC;IAC9Ef,UAAU,CAAC2B,aAAa,CAAC;IACzBzB,cAAc,CAAC,EAAE,CAAC;EACpB,CAAC;EAED,MAAM0B,iBAAiB,GAAIX,CAAC,IAAK;IAC/B,MAAMY,aAAa,GAAGZ,CAAC,CAACE,MAAM,CAACC,KAAK;IACpCxB,QAAQ,CAACiC,aAAa,CAAC;IAEvB,MAAMC,WAAW,GAAGzC,OAAO,CAAC0C,IAAI,CAACjB,GAAG,IAAIA,GAAG,CAACvB,KAAK,CAACwB,IAAI,KAAKxB,KAAK,IAAIuB,GAAG,CAACrB,MAAM,CAACsB,IAAI,KAAKtB,MAAM,IAAIqB,GAAG,CAACnB,KAAK,CAACoB,IAAI,KAAKc,aAAa,CAAC;IACnI3B,cAAc,CAAC4B,WAAW,GAAGA,WAAW,CAAC7B,WAAW,GAAG,EAAE,CAAC;EAC5D,CAAC;EAED,MAAM+B,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,IAAIC,IAAI;IACR,IAAIC,GAAG;IACP,IAAIC,eAAe;;IAEnB;IACA,IAAIjD,kBAAkB,KAAK,QAAQ,EAAE;MAEnC;MACEgD,GAAG,GAAG,GAAG/C,OAAO,mBAAmB,CAAC,CAAC;MACrC8C,IAAI,GAAG;QACH1C,KAAK,EAAEA,KAAK;QACZE,MAAM,EAAGA,MAAM;QACfE,KAAK,EAAEA,KAAK;QACZM,WAAW,EAAEA;MACjB,CAAC;MAED,IAAI;QAEF;QACAkC,eAAe,GAAG,MAAMjE,KAAK,CAACkE,IAAI,CAACF,GAAG,EAAED,IAAI,CAAC;QAC7C,MAAMI,WAAW,GAAGF,eAAe,CAAC1B,IAAI,CAAC6B,MAAM;;QAE/C;;QAEAJ,GAAG,GAAG,GAAG/C,OAAO,kBAAkB,CAAC,CAAC;QACpC8C,IAAI,GAAG;UACLK,MAAM,EAAED;QACV,CAAC;QAGDF,eAAe,GAAG,MAAMjE,KAAK,CAACkE,IAAI,CAACF,GAAG,EAAED,IAAI,CAAC;QAC7C;;QAEA7C,QAAQ,CAAC,qBAAqB,EAAE;UAAEmD,KAAK,EAAE;YAAEC,eAAe,EAAEL,eAAe,CAAC1B;UAAK;QAAE,CAAC,CAAC;MAEvF,CAAC,CAAC,OAAOgC,GAAG,EAAE;QACVrC,QAAQ,CAAC,8BAA8B,CAAC;MAC5C;;MAEJ;IACA,CAAC,MAAM,IAAIlB,kBAAkB,KAAK,QAAQ,EAAE;MAExCgD,GAAG,GAAG,GAAG/C,OAAO,sBAAsB;MACtC8C,IAAI,GAAG;QACH1C,KAAK,EAAE;UAAEwB,IAAI,EAAExB;QAAM,CAAC;QACtBE,MAAM,EAAE;UAAEsB,IAAI,EAAEtB;QAAO,CAAC;QACxBE,KAAK,EAAE;UAAEoB,IAAI,EAAEpB;QAAM,CAAC;QACtBM,WAAW,EAAEA;MACjB,CAAC;MAED,IAAI;QACF,MAAMM,QAAQ,GAAG,MAAMrC,KAAK,CAACkE,IAAI,CAACF,GAAG,EAAED,IAAI,CAAC;QAC5C7C,QAAQ,CAAC,cAAc,EAAE;UAAEmD,KAAK,EAAE;YAAEC,eAAe,EAAEjC,QAAQ,CAACE;UAAK;QAAE,CAAC,CAAC;MACzE,CAAC,CAAC,OAAOgC,GAAG,EAAE;QACVrC,QAAQ,CAAC,iCAAiC8B,GAAG,EAAE,CAAC;MACpD;IAEJ,CAAC,MAAM;MACH9B,QAAQ,CAAC,uBAAuB,CAAC;MACjC;IACJ;EACJ,CAAC;EAEC,MAAMsC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI;MACF,IAAInD,KAAK,IAAIE,MAAM,EAAE;QACnB,OAAOkD,OAAO,CAAC,wBAAwBpD,KAAK,IAAIE,MAAM,MAAM,CAAC;MAC/D;IACF,CAAC,CAAC,OAAOgD,GAAG,EAAE;MACZ/B,OAAO,CAACP,KAAK,CAAC,uBAAuB,EAAEsC,GAAG,CAAC;IAC7C;IACA,OAAOE,OAAO,CAAC,uCAAuC,CAAC;EACzD,CAAC;EAED,oBACE9D,OAAA,CAACN,WAAW;IAACqE,MAAM,EAAE,sBAAuB;IAAAC,QAAA,gBAE1ChE,OAAA,CAACJ,WAAW;MAACqE,KAAK,EAAC,mBAAmB;MAACC,SAAS,EAAC,OAAO;MAACC,IAAI,EAAC,aAAa;MAACC,QAAQ,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE9FxE,OAAA,CAAClB,IAAI;MAAC2F,SAAS;MAACC,OAAO,EAAE,CAAE;MAACC,OAAO,EAAE,CAAE;MAACC,EAAE,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAM,CAAE;MAAAd,QAAA,gBAC5EhE,OAAA,CAAClB,IAAI;QAACiG,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACL,EAAE,EAAE;UAAEC,KAAK,EAACrD,WAAW;UAAEsD,MAAM,EAAE;QAAM,CAAE;QAAAd,QAAA,eACjEhE,OAAA,CAACrB,GAAG;UAACuG,EAAE,EAAE,CAAE;UAACN,EAAE,EAAE;YAAEO,OAAO,EAAE,MAAM;YAAEC,cAAc,EAAE,QAAQ;YAAEC,UAAU,EAAE;UAAS,CAAE;UAAArB,QAAA,eAClFhE,OAAA;YAAKsF,GAAG,EAAEzB,YAAY,CAAC,CAAE;YAAC0B,GAAG,EAAC,mBAAmB;YAACC,KAAK,EAAE;cAAEX,KAAK,EAACrD;YAAY;UAAE;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/E;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAEPxE,OAAA,CAAClB,IAAI;QAACiG,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACL,EAAE,EAAE;UAAEa,MAAM,EAAC,OAAO;UAAEX,MAAM,EAAE;QAAM,CAAE;QAAAd,QAAA,eAC9DhE,OAAA,CAAChB,IAAI;UAAAgF,QAAA,gBACHhE,OAAA,CAACf,QAAQ;YAAA+E,QAAA,eACPhE,OAAA,CAACnB,WAAW;cAAC6G,SAAS;cAAA1B,QAAA,gBACpBhE,OAAA,CAACjB,UAAU;gBAAAiF,QAAA,EAAC;cAAK;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC9BxE,OAAA,CAACb,MAAM;gBAACoD,KAAK,EAAE7B,KAAM;gBAACiF,QAAQ,EAAExD,iBAAkB;gBAAA6B,QAAA,gBAChDhE,OAAA,CAACd,QAAQ;kBAACqD,KAAK,EAAC,EAAE;kBAAAyB,QAAA,eAChBhE,OAAA;oBAAAgE,QAAA,EAAI;kBAAiB;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClB,CAAC,EACV1C,MAAM,CAACE,GAAG,CAAC,CAAC4D,CAAC,EAAEC,GAAG,kBACjB7F,OAAA,CAACd,QAAQ;kBAAWqD,KAAK,EAAEqD,CAAE;kBAAA5B,QAAA,EAC1B4B;gBAAC,GADWC,GAAG;kBAAAxB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAER,CACX,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAEXxE,OAAA,CAACf,QAAQ;YAAA+E,QAAA,EACNhD,OAAO,CAAC8E,MAAM,GAAG,CAAC,iBACjB9F,OAAA,CAACnB,WAAW;cAAC6G,SAAS;cAAA1B,QAAA,gBACpBhE,OAAA,CAACjB,UAAU;gBAAAiF,QAAA,EAAC;cAAM;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC/BxE,OAAA,CAACb,MAAM;gBAACoD,KAAK,EAAE3B,MAAO;gBAAC+E,QAAQ,EAAEhD,kBAAmB;gBAAAqB,QAAA,gBAClDhE,OAAA,CAACd,QAAQ;kBAACqD,KAAK,EAAC,EAAE;kBAAAyB,QAAA,eAChBhE,OAAA;oBAAAgE,QAAA,EAAI;kBAAkB;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnB,CAAC,EACVxD,OAAO,CAACgB,GAAG,CAAC,CAAC4D,CAAC,EAAEC,GAAG,kBAClB7F,OAAA,CAACd,QAAQ;kBAAWqD,KAAK,EAAEqD,CAAE;kBAAA5B,QAAA,EAC1B4B;gBAAC,GADWC,GAAG;kBAAAxB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAER,CACX,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UACd;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC,eAEXxE,OAAA,CAACf,QAAQ;YAAA+E,QAAA,EACN9C,OAAO,CAAC4E,MAAM,GAAG,CAAC,iBACjB9F,OAAA,CAACnB,WAAW;cAAC6G,SAAS;cAAA1B,QAAA,gBACpBhE,OAAA,CAACjB,UAAU;gBAAAiF,QAAA,EAAC;cAAK;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAC9BxE,OAAA,CAACb,MAAM;gBAACoD,KAAK,EAAEzB,KAAM;gBAAC6E,QAAQ,EAAE5C,iBAAkB;gBAAAiB,QAAA,gBAChDhE,OAAA,CAACd,QAAQ;kBAACqD,KAAK,EAAC,EAAE;kBAAAyB,QAAA,eAChBhE,OAAA;oBAAAgE,QAAA,EAAI;kBAAiB;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAI;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAClB,CAAC,EACVtD,OAAO,CAACc,GAAG,CAAC,CAAC4D,CAAC,EAAEC,GAAG,kBAClB7F,OAAA,CAACd,QAAQ;kBAAWqD,KAAK,EAAEqD,CAAE;kBAAA5B,QAAA,EAC1B4B;gBAAC,GADWC,GAAG;kBAAAxB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAER,CACX,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACI,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UACZ;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAENpD,WAAW,CAAC0E,MAAM,GAAG,CAAC,iBACrB9F,OAAA,CAACrB,GAAG;MAACuG,EAAE,EAAE,CAAE;MAACP,OAAO,EAAE,CAAE;MAAAX,QAAA,gBAErBhE,OAAA,CAACJ,WAAW;QAACqE,KAAK,EAAC,kCAA+B;QAACC,SAAS,EAAC,OAAO;QAACC,IAAI,EAAC;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAEhGxE,OAAA,CAACrB,GAAG;QAAAqF,QAAA,eACFhE,OAAA,CAAClB,IAAI;UAAC2F,SAAS;UAACC,OAAO,EAAE,CAAE;UAAAV,QAAA,EACxB5C,WAAW,CAACY,GAAG,CAAC,CAAC+D,IAAI,EAAEF,GAAG;YAAA,IAAAG,qBAAA,EAAAC,iBAAA,EAAAC,iBAAA,EAAAC,qBAAA,EAAAC,kBAAA,EAAAC,aAAA;YAAA,oBACzBrG,OAAA,CAAClB,IAAI;cAACiG,IAAI;cAACC,EAAE,EAAE,EAAG;cAACC,EAAE,EAAE,CAAE;cAAAjB,QAAA,eAEvBhE,OAAA,CAACL,KAAK;gBACJ4C,KAAK,GAAAyD,qBAAA,GAAED,IAAI,CAACO,gBAAgB,cAAAN,qBAAA,cAAAA,qBAAA,GAAID,IAAI,CAACQ,QAAS;gBAC9CC,GAAG,GAAAP,iBAAA,GAAEF,IAAI,CAACU,WAAW,cAAAR,iBAAA,cAAAA,iBAAA,GAAIF,IAAI,CAACS,GAAI;gBAClCE,GAAG,GAAAR,iBAAA,GAAEH,IAAI,CAACY,WAAW,cAAAT,iBAAA,cAAAA,iBAAA,GAAIH,IAAI,CAACW,GAAI;gBAClCE,SAAS,GAAAT,qBAAA,GAAEJ,IAAI,CAACc,gBAAgB,cAAAV,qBAAA,cAAAA,qBAAA,GAAIJ,IAAI,CAACe,QAAS;gBAClDC,KAAK,GAAAX,kBAAA,GAAEL,IAAI,CAAC7D,IAAI,CAAC8E,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,cAAAZ,kBAAA,cAAAA,kBAAA,GAAI,KAAM,CAAC;gBAAA;gBAC9Ca,KAAK,GAAAZ,aAAA,GAAEN,IAAI,CAACmB,OAAO,cAAAb,aAAA,cAAAA,aAAA,GAAI;cAAM;gBAAAhC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9B;YAAC,GAT2BqB,GAAG;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAU5B,CAAC;UAAA,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAEA9D,KAAK,IAAIE,MAAM,IAAIE,KAAK,IAAIM,WAAW,CAAC0E,MAAM,GAAG,CAAC,iBACjD9F,OAAA,CAAAE,SAAA;MAAA8D,QAAA,gBACEhE,OAAA,CAACrB,GAAG;QAACiG,EAAE,EAAE;UAAEa,MAAM,EAAE,OAAO;UAAEZ,KAAK,EAAE,MAAM;UAAEsC,UAAU,EAAE,OAAO;UAAEC,YAAY,EAAE;QAAM;MAAE;QAAA/C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEzFxE,OAAA,CAACrB,GAAG;QAACiG,EAAE,EAAE;UAAEO,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE,QAAQ;UAAEC,UAAU,EAAE;QAAS,CAAE;QAAArB,QAAA,eAC3EhE,OAAA,CAACpB,MAAM;UACLyI,OAAO,EAAElE,kBAAmB;UAC5BmE,KAAK,EAAC,SAAS;UACfC,OAAO,EAAC,WAAW;UACnB3C,EAAE,EAAE;YAAEC,KAAK,EAAE,OAAO;YAAEY,MAAM,EAAE,MAAM;YAAE+B,QAAQ,EAAE;UAAS,CAAE;UAAAxD,QAAA,EAC5D;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA,eACN,CACH,EACFlD,KAAK,iBACJtB,OAAA,CAACZ,UAAU;MAACmI,OAAO,EAAC,SAAS;MAACD,KAAK,EAAC,OAAO;MAACG,YAAY;MAAC7C,EAAE,EAAE;QAAEO,OAAO,EAAE;MAAQ,CAAE;MAAAnB,QAAA,EAC/E1C;IAAK;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CACb;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAElB,CAAC;AAACpE,EAAA,CA9PID,YAAY;EAAA,QAGCV,WAAW;AAAA;AAAAiI,EAAA,GAHxBvH,YAAY;AAgQlB,eAAeA,YAAY;AAAC,IAAAuH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}