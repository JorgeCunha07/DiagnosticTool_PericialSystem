{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jorge Cunha\\\\Documents\\\\GitHub\\\\AIAutonomousDriving\\\\frontend\\\\car-diagnosis\\\\src\\\\pages\\\\DiagnosticoCarro.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { Alert, Box, Button, CircularProgress, TextField, Typography } from \"@mui/material\";\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport CardWrapper from \"../components/CardWrapper\";\nimport TituloLinha from \"../components/TituloLinha\";\nimport { getApiUrl } from '../config/apiConfig';\n\n// const useDiagnostico = (initialData) => {\n//   const [diagnostico, setDiagnostico] = useState(initialData);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const navigate = useNavigate();\n//   const API_URL = getApiUrl();\n\n//   const handleAnswer = async (answer) => {\n//     setLoading(true);\n\n//     let requestBody = {};\n//     let endpoint = '';\n//     let prolog_response;\n\n//     if (sistemaSelecionado === 'Drools') {\n\n//       endpoint = '/diagnostico/responder';\n\n//       requestBody = {\n//         texto: answer,\n//         estado: diagnostico.estado,\n//         pergunta: diagnostico.pergunta,\n//         carroSelecionado: diagnostico.carroSelecionado,\n//         marcaSelecionada: diagnostico.carroSelecionado.marca.nome,\n//         modeloSelecionado: diagnostico.carroSelecionado.modelo.nome,\n//         motorSelecionado: diagnostico.carroSelecionado.motor.nome,\n//         diagnostico: diagnostico.diagnostico,\n//         solucao: diagnostico.solucao,\n//         explicacaoGeral: diagnostico.explicacaoGeral,\n//         explicacaoGeralNao: diagnostico.explicacaoGeralNao,\n//         como: diagnostico.como,\n//         evidencias: diagnostico.evidencias,\n//         triggeredRules: diagnostico.triggeredRules,\n//       };\n\n//       try {\n//         const response = await axios.post(`${API_URL}${endpoint}`, requestBody);\n\n//         if (response.data.estado === 'finalizado') {\n//           navigate('/conclusao', { state: { responseData: response.data } });\n//         } else if (\n//           !response.data ||\n//           !response.data.carroSelecionado.marca ||\n//           !response.data.carroSelecionado.hasOwnProperty(\"marca\")\n//         ) {\n//           navigate('/error', { state: { responseData: response.data || 'Não recebeu dados válidos.' } });\n//         } else {\n//           setDiagnostico(response.data);\n//         }\n//       } catch (err) {\n//         setError('Falha ao enviar resposta.');\n//       } finally {\n//         setLoading(false);\n//       }\n\n//     } else if (sistemaSelecionado === 'PROLOG') {\n\n//       endpoint = '/pergunta';\n\n//       requestBody = {\n//         texto: answer,\n//         estado: diagnostico?.estado || 'N/A',\n//         pergunta: diagnostico?.pergunta || 'N/A',\n//         carroSelecionado: diagnostico?.carroSelecionado || 'N/A',\n//         marcaSelecionada: 'N/A',\n//         modeloSelecionado: 'N/A',\n//         motorSelecionado: 'N/A',\n//         diagnostico: 'N/A',\n//         solucao: 'N/A',\n//         explicacaoGeral: 'N/A',\n//         explicacaoGeralNao: 'N/A',\n//         como: 'N/A',\n//         evidencias: 'N/A',\n//         triggeredRules: 'N/A',\n//       };\n\n//       prolog_response = await axios.get(`${API_URL}${endpoint}`);\n\n//       const estado = prolog_response.data.estado;\n//       const pergunta = prolog_response.data.pergunta;\n//       const respostas = prolog_response.data.respostas;\n\n//       console.log(\">>>> DiagnosticoCarro: estado: \" + estado);\n//       console.log(\">>>> DiagnosticoCarro: pergunta: \" + pergunta);\n//       console.log(\">>>> DiagnosticoCarro: respostas: \" + respostas);\n\n//       try {\n//         const response = await axios.post(`${API_URL}${endpoint}`, requestBody);\n\n//         if (response.data.estado === 'finalizado') {\n//           navigate('/conclusao', { state: { responseData: response.data } });\n//         } else if (\n//           !response.data\n//         ) {\n//           navigate('/error', { state: { responseData: response.data || 'Não recebeu dados válidos.' } });\n//         } else {\n//           setDiagnostico(response.data);\n//         }\n//       } catch (err) {\n//         setError('Falha ao enviar resposta.');\n//       } finally {\n//         setLoading(false);\n//       }\n//     }\n\n//     // try {\n//     //   const response = await axios.post(`${API_URL}${endpoint}`, requestBody);\n\n//     //   if (response.data.estado === 'finalizado') {\n//     //     navigate('/conclusao', { state: { responseData: response.data } });\n//     //   } else if (\n//     //     !response.data ||\n//     //     !response.data.carroSelecionado.marca ||\n//     //     !response.data.carroSelecionado.hasOwnProperty(\"marca\")\n//     //   ) {\n//     //     navigate('/error', { state: { responseData: response.data || 'Não recebeu dados válidos.' } });\n//     //   } else {\n//     //     setDiagnostico(response.data);\n//     //   }\n//     // } catch (err) {\n//     //   setError('Falha ao enviar resposta.');\n//     // } finally {\n//     //   setLoading(false);\n//     // }\n//   };\n\n//   return { diagnostico, loading, error, handleAnswer };\n// };\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst tamanho_img = '240px';\nconst useDiagnostico = initialData => {\n  _s();\n  const [diagnostico, setDiagnostico] = useState(initialData);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const handleAnswer = async answer => {\n    setLoading(true);\n    const requestBody = {\n      texto: answer,\n      estado: diagnostico.estado,\n      pergunta: diagnostico.pergunta,\n      carroSelecionado: diagnostico.carroSelecionado,\n      marcaSelecionada: diagnostico.carroSelecionado.marca.nome,\n      modeloSelecionado: diagnostico.carroSelecionado.modelo.nome,\n      motorSelecionado: diagnostico.carroSelecionado.motor.nome,\n      diagnostico: diagnostico.diagnostico,\n      solucao: diagnostico.solucao,\n      explicacaoGeral: diagnostico.explicacaoGeral,\n      explicacaoGeralNao: diagnostico.explicacaoGeralNao,\n      como: diagnostico.como,\n      evidencias: diagnostico.evidencias,\n      triggeredRules: diagnostico.triggeredRules\n    };\n    try {\n      const response = await axios.post(`${getApiUrl()}/diagnostico/responder`, requestBody);\n      if (response.data.estado === 'finalizado') {\n        navigate('/conclusao', {\n          state: {\n            responseData: response.data\n          }\n        });\n      } else if (!response.data || !response.data.carroSelecionado.marca || !response.data.carroSelecionado.hasOwnProperty(\"marca\")) {\n        navigate('/error', {\n          state: {\n            responseData: response.data || 'Não recebeu dados válidos.'\n          }\n        });\n      } else {\n        setDiagnostico(response.data);\n      }\n    } catch (err) {\n      setError('Falha ao enviar resposta.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return {\n    diagnostico,\n    loading,\n    error,\n    handleAnswer\n  };\n};\n_s(useDiagnostico, \"Lq9Kdswq+tzE4+2Wm6YUGOX1pUM=\", false, function () {\n  return [useNavigate];\n});\nconst DiagnosticoCarro = () => {\n  _s2();\n  var _diagnostico$carroSel, _diagnostico$carroSel2, _diagnostico$carroSel3;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [nivelOleo, setNivelOleo] = useState(0.0);\n  const {\n    diagnosticoData\n  } = location.state;\n  const {\n    diagnostico,\n    loading,\n    error,\n    handleAnswer\n  } = useDiagnostico(diagnosticoData);\n  if (!diagnosticoData) return null;\n  const marca = (diagnostico === null || diagnostico === void 0 ? void 0 : (_diagnostico$carroSel = diagnostico.carroSelecionado.marca) === null || _diagnostico$carroSel === void 0 ? void 0 : _diagnostico$carroSel.nome) || 'N/A';\n  const modelo = (diagnostico === null || diagnostico === void 0 ? void 0 : (_diagnostico$carroSel2 = diagnostico.carroSelecionado.modelo) === null || _diagnostico$carroSel2 === void 0 ? void 0 : _diagnostico$carroSel2.nome) || 'N/A';\n  const motor = (diagnostico === null || diagnostico === void 0 ? void 0 : (_diagnostico$carroSel3 = diagnostico.carroSelecionado.motor) === null || _diagnostico$carroSel3 === void 0 ? void 0 : _diagnostico$carroSel3.nome) || 'N/A';\n  const getImagePath = () => {\n    try {\n      if (marca && modelo) {\n        return require(`../assets/img/carros/${marca}/${modelo}.png`);\n      }\n    } catch (err) {\n      console.error('Imagem não encontrada', err);\n    }\n    return require(`../assets/img/carros/question-car.png`);\n  };\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    titulo: `Questionário Diagnóstico`,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"h2\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: getImagePath(),\n            alt: \"Carro Selecionado\",\n            style: {\n              width: tamanho_img,\n              margin: 0,\n              padding: 0\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            mt: 3,\n            marginTop: 0,\n            marginBottom: \"20px\",\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: [marca, \" \", modelo, \" \", motor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TituloLinha, {\n      title: \"Pergunta\",\n      lineColor: \"white\",\n      icon: \"QuestionMark\",\n      position: \"13px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        whiteSpace: 'pre-line',\n        paddingBottom: '70px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h2\",\n        sx: {\n          mt: 2\n        },\n        children: diagnostico.pergunta.split('?')[0] + '?'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: '0.5px',\n        width: \"100%\",\n        background: 'white',\n        marginBottom: '30px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 3,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: diagnostico.pergunta && !loading && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 3\n        },\n        children: [diagnostico.pergunta.includes(\"(Sim/Não)\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleAnswer(\"Sim\"),\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              mr: 2\n            },\n            children: \"Sim\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleAnswer(\"Não\"),\n            variant: \"contained\",\n            color: \"secondary\",\n            children: \"N\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), diagnostico.pergunta.includes(\"(Baixo/Alto/Normal)\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleAnswer(\"Baixo\"),\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              mr: 2\n            },\n            children: \"Baixo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleAnswer(\"Normal\"),\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              mr: 2\n            },\n            children: \"Normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleAnswer(\"Alto\"),\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Alto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), diagnostico.pergunta.includes(\"(Minimo/Maximo/Normal)\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleAnswer(\"Minimo\"),\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              mr: 2\n            },\n            children: \"Minimo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleAnswer(\"Normal\"),\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              mr: 2\n            },\n            children: \"Normal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleAnswer(\"Maximo\"),\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Maximo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), diagnostico.pergunta.match(/\\s+\\((\\d+\\.\\d+) \\/ (\\d+\\.\\d+)\\)Litros/) && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: (() => {\n            const match = diagnostico.pergunta.match(/\\s+\\((\\d+\\.\\d+) \\/ (\\d+\\.\\d+)\\)Litros/);\n            const minValue = match ? parseFloat(match[1]) : 0;\n            const maxValue = match ? parseFloat(match[2]) : 0;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                type: \"number\",\n                step: \"0.1\",\n                min: minValue,\n                max: maxValue,\n                value: nivelOleo !== null ? nivelOleo : minValue,\n                onChange: e => setNivelOleo(parseFloat(e.target.value)),\n                style: {\n                  width: \"100px\"\n                },\n                InputProps: {\n                  inputProps: {\n                    max: maxValue,\n                    min: minValue\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAnswer(nivelOleo),\n                variant: \"contained\",\n                color: \"primary\",\n                sx: {\n                  ml: 2,\n                  mt: 2\n                },\n                children: \"Enviar resposta\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true);\n          })()\n        }, void 0, false), diagnostico.pergunta.match(/Verifique os seguintes componentes\\:/) && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: diagnostico.pergunta.match(/\\d+/g).map((num, index) => /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleAnswer(num),\n            variant: \"contained\",\n            color: \"primary\",\n            sx: {\n              mr: 2\n            },\n            children: num\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 17\n          }, this))\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n_s2(DiagnosticoCarro, \"5EhfdftRY/wXfywnUYkeVBiMx0c=\", false, function () {\n  return [useLocation, useNavigate, useDiagnostico];\n});\n_c = DiagnosticoCarro;\nexport default DiagnosticoCarro;\nvar _c;\n$RefreshReg$(_c, \"DiagnosticoCarro\");","map":{"version":3,"names":["Alert","Box","Button","CircularProgress","TextField","Typography","axios","useState","useLocation","useNavigate","CardWrapper","TituloLinha","getApiUrl","jsxDEV","_jsxDEV","Fragment","_Fragment","tamanho_img","useDiagnostico","initialData","_s","diagnostico","setDiagnostico","loading","setLoading","error","setError","navigate","handleAnswer","answer","requestBody","texto","estado","pergunta","carroSelecionado","marcaSelecionada","marca","nome","modeloSelecionado","modelo","motorSelecionado","motor","solucao","explicacaoGeral","explicacaoGeralNao","como","evidencias","triggeredRules","response","post","data","state","responseData","hasOwnProperty","err","DiagnosticoCarro","_s2","_diagnostico$carroSel","_diagnostico$carroSel2","_diagnostico$carroSel3","location","nivelOleo","setNivelOleo","diagnosticoData","getImagePath","require","console","titulo","children","sx","mt","display","justifyContent","alignItems","variant","component","src","alt","style","width","margin","padding","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","marginBottom","title","lineColor","icon","position","whiteSpace","paddingBottom","split","height","background","severity","includes","onClick","color","mr","match","minValue","parseFloat","maxValue","type","step","min","max","value","onChange","e","target","InputProps","inputProps","ml","map","num","index","_c","$RefreshReg$"],"sources":["C:/Users/Jorge Cunha/Documents/GitHub/AIAutonomousDriving/frontend/car-diagnosis/src/pages/DiagnosticoCarro.jsx"],"sourcesContent":["import { Alert, Box, Button, CircularProgress, TextField, Typography } from \"@mui/material\";\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport CardWrapper from \"../components/CardWrapper\";\r\nimport TituloLinha from \"../components/TituloLinha\";\r\nimport { getApiUrl } from '../config/apiConfig';\r\n\r\n// const useDiagnostico = (initialData) => {\r\n//   const [diagnostico, setDiagnostico] = useState(initialData);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n//   const navigate = useNavigate();\r\n//   const API_URL = getApiUrl();\r\n\r\n//   const handleAnswer = async (answer) => {\r\n//     setLoading(true);\r\n\r\n//     let requestBody = {};\r\n//     let endpoint = '';\r\n//     let prolog_response;\r\n\r\n//     if (sistemaSelecionado === 'Drools') {\r\n\r\n//       endpoint = '/diagnostico/responder';\r\n\r\n//       requestBody = {\r\n//         texto: answer,\r\n//         estado: diagnostico.estado,\r\n//         pergunta: diagnostico.pergunta,\r\n//         carroSelecionado: diagnostico.carroSelecionado,\r\n//         marcaSelecionada: diagnostico.carroSelecionado.marca.nome,\r\n//         modeloSelecionado: diagnostico.carroSelecionado.modelo.nome,\r\n//         motorSelecionado: diagnostico.carroSelecionado.motor.nome,\r\n//         diagnostico: diagnostico.diagnostico,\r\n//         solucao: diagnostico.solucao,\r\n//         explicacaoGeral: diagnostico.explicacaoGeral,\r\n//         explicacaoGeralNao: diagnostico.explicacaoGeralNao,\r\n//         como: diagnostico.como,\r\n//         evidencias: diagnostico.evidencias,\r\n//         triggeredRules: diagnostico.triggeredRules,\r\n//       };\r\n\r\n//       try {\r\n//         const response = await axios.post(`${API_URL}${endpoint}`, requestBody);\r\n  \r\n//         if (response.data.estado === 'finalizado') {\r\n//           navigate('/conclusao', { state: { responseData: response.data } });\r\n//         } else if (\r\n//           !response.data ||\r\n//           !response.data.carroSelecionado.marca ||\r\n//           !response.data.carroSelecionado.hasOwnProperty(\"marca\")\r\n//         ) {\r\n//           navigate('/error', { state: { responseData: response.data || 'Não recebeu dados válidos.' } });\r\n//         } else {\r\n//           setDiagnostico(response.data);\r\n//         }\r\n//       } catch (err) {\r\n//         setError('Falha ao enviar resposta.');\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n\r\n//     } else if (sistemaSelecionado === 'PROLOG') {\r\n\r\n//       endpoint = '/pergunta';\r\n\r\n//       requestBody = {\r\n//         texto: answer,\r\n//         estado: diagnostico?.estado || 'N/A',\r\n//         pergunta: diagnostico?.pergunta || 'N/A',\r\n//         carroSelecionado: diagnostico?.carroSelecionado || 'N/A',\r\n//         marcaSelecionada: 'N/A',\r\n//         modeloSelecionado: 'N/A',\r\n//         motorSelecionado: 'N/A',\r\n//         diagnostico: 'N/A',\r\n//         solucao: 'N/A',\r\n//         explicacaoGeral: 'N/A',\r\n//         explicacaoGeralNao: 'N/A',\r\n//         como: 'N/A',\r\n//         evidencias: 'N/A',\r\n//         triggeredRules: 'N/A',\r\n//       };\r\n\r\n//       prolog_response = await axios.get(`${API_URL}${endpoint}`);\r\n\r\n//       const estado = prolog_response.data.estado;\r\n//       const pergunta = prolog_response.data.pergunta;\r\n//       const respostas = prolog_response.data.respostas;\r\n      \r\n//       console.log(\">>>> DiagnosticoCarro: estado: \" + estado);\r\n//       console.log(\">>>> DiagnosticoCarro: pergunta: \" + pergunta);\r\n//       console.log(\">>>> DiagnosticoCarro: respostas: \" + respostas);\r\n\r\n//       try {\r\n//         const response = await axios.post(`${API_URL}${endpoint}`, requestBody);\r\n  \r\n//         if (response.data.estado === 'finalizado') {\r\n//           navigate('/conclusao', { state: { responseData: response.data } });\r\n//         } else if (\r\n//           !response.data\r\n//         ) {\r\n//           navigate('/error', { state: { responseData: response.data || 'Não recebeu dados válidos.' } });\r\n//         } else {\r\n//           setDiagnostico(response.data);\r\n//         }\r\n//       } catch (err) {\r\n//         setError('Falha ao enviar resposta.');\r\n//       } finally {\r\n//         setLoading(false);\r\n//       }\r\n//     }\r\n\r\n//     // try {\r\n//     //   const response = await axios.post(`${API_URL}${endpoint}`, requestBody);\r\n\r\n//     //   if (response.data.estado === 'finalizado') {\r\n//     //     navigate('/conclusao', { state: { responseData: response.data } });\r\n//     //   } else if (\r\n//     //     !response.data ||\r\n//     //     !response.data.carroSelecionado.marca ||\r\n//     //     !response.data.carroSelecionado.hasOwnProperty(\"marca\")\r\n//     //   ) {\r\n//     //     navigate('/error', { state: { responseData: response.data || 'Não recebeu dados válidos.' } });\r\n//     //   } else {\r\n//     //     setDiagnostico(response.data);\r\n//     //   }\r\n//     // } catch (err) {\r\n//     //   setError('Falha ao enviar resposta.');\r\n//     // } finally {\r\n//     //   setLoading(false);\r\n//     // }\r\n//   };\r\n\r\n//   return { diagnostico, loading, error, handleAnswer };\r\n// };\r\n\r\nconst tamanho_img = '240px';\r\n\r\nconst useDiagnostico = (initialData) => {\r\n  const [diagnostico, setDiagnostico] = useState(initialData);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleAnswer = async (answer) => {\r\n    setLoading(true);\r\n\r\n    const requestBody = {\r\n      texto: answer,\r\n      estado: diagnostico.estado,\r\n      pergunta: diagnostico.pergunta,\r\n      carroSelecionado: diagnostico.carroSelecionado,\r\n      marcaSelecionada: diagnostico.carroSelecionado.marca.nome,\r\n      modeloSelecionado: diagnostico.carroSelecionado.modelo.nome,\r\n      motorSelecionado: diagnostico.carroSelecionado.motor.nome,\r\n      diagnostico: diagnostico.diagnostico,\r\n      solucao: diagnostico.solucao,\r\n      explicacaoGeral: diagnostico.explicacaoGeral,\r\n      explicacaoGeralNao: diagnostico.explicacaoGeralNao,\r\n      como: diagnostico.como,\r\n      evidencias: diagnostico.evidencias,\r\n      triggeredRules: diagnostico.triggeredRules,\r\n    };\r\n\r\n    try {\r\n      const response = await axios.post(`${getApiUrl()}/diagnostico/responder`, requestBody);\r\n\r\n      if (response.data.estado === 'finalizado') {\r\n        navigate('/conclusao', { state: { responseData: response.data } });\r\n      } else if (!response.data || !response.data.carroSelecionado.marca || !response.data.carroSelecionado.hasOwnProperty(\"marca\")) {\r\n        navigate('/error', { state: { responseData: response.data || 'Não recebeu dados válidos.' } });\r\n      } else {\r\n        setDiagnostico(response.data);\r\n      }\r\n\r\n    } catch (err) {\r\n      setError('Falha ao enviar resposta.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return { diagnostico, loading, error, handleAnswer };\r\n};\r\n\r\nconst DiagnosticoCarro = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const [nivelOleo, setNivelOleo] = useState(0.0);\r\n  \r\n  const { diagnosticoData } = location.state;\r\n  const { diagnostico, loading, error, handleAnswer } = useDiagnostico(diagnosticoData);\r\n\r\n  if (!diagnosticoData) return null;\r\n\r\n  const marca = diagnostico?.carroSelecionado.marca?.nome || 'N/A';\r\n  const modelo = diagnostico?.carroSelecionado.modelo?.nome || 'N/A';\r\n  const motor = diagnostico?.carroSelecionado.motor?.nome || 'N/A';\r\n\r\n  const getImagePath = () => {\r\n    try {\r\n      if (marca && modelo) {\r\n        return require(`../assets/img/carros/${marca}/${modelo}.png`);\r\n      }\r\n    } catch (err) {\r\n      console.error('Imagem não encontrada', err);\r\n    }\r\n    return require(`../assets/img/carros/question-car.png`);\r\n  };\r\n\r\n  return (\r\n    <CardWrapper titulo={`Questionário Diagnóstico`}>\r\n      \r\n      <Box sx={{ mt: 3 , display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n        <Typography variant=\"h6\" component=\"h2\">\r\n          <Box mt={2}>\r\n            <img src={getImagePath()} alt=\"Carro Selecionado\" style={{ width:tamanho_img, margin: 0, padding: 0 }} />\r\n          </Box>\r\n          <Box sx={{ mt: 3 , marginTop: 0, marginBottom: \"20px\", display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            {marca} {modelo} {motor}</Box>\r\n        </Typography>\r\n      </Box>\r\n\r\n      <TituloLinha title=\"Pergunta\" lineColor=\"white\" icon=\"QuestionMark\" position=\"13px\" />\r\n      <Box sx={{ mt: 3 , display: 'flex', justifyContent: 'center', alignItems: 'center', whiteSpace:'pre-line', paddingBottom:'70px' }}>\r\n        <Typography variant=\"h5\" component=\"h2\" sx={{ mt: 2 }}>\r\n          {diagnostico.pergunta.split('?')[0] + '?'}\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Box sx={{ height: '0.5px', width: \"100%\", background: 'white', marginBottom: '30px'}} />\r\n\r\n      {loading && (\r\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\r\n          <CircularProgress />\r\n        </Box>\r\n      )}\r\n\r\n      {error && (\r\n        <Box sx={{ mt: 2 }}>\r\n          <Alert severity=\"error\">{error}</Alert>\r\n        </Box>\r\n      )}\r\n\r\n      <Box sx={{ mt: 3 , display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n      {diagnostico.pergunta && !loading && (\r\n        <Box sx={{ mt: 3 }}>\r\n          {diagnostico.pergunta.includes(\"(Sim/Não)\") && (\r\n            <>\r\n              <Button onClick={() => handleAnswer(\"Sim\")} variant=\"contained\" color=\"primary\" sx={{ mr: 2 }}>Sim</Button>\r\n              <Button onClick={() => handleAnswer(\"Não\")} variant=\"contained\" color=\"secondary\">Não</Button>\r\n            </>\r\n          )}\r\n\r\n          {diagnostico.pergunta.includes(\"(Baixo/Alto/Normal)\") && (\r\n            <>\r\n              <Button onClick={() => handleAnswer(\"Baixo\")} variant=\"contained\" color=\"primary\" sx={{ mr: 2 }}>Baixo</Button>\r\n              <Button onClick={() => handleAnswer(\"Normal\")} variant=\"contained\" color=\"primary\" sx={{ mr: 2 }}>Normal</Button>\r\n              <Button onClick={() => handleAnswer(\"Alto\")} variant=\"contained\" color=\"primary\">Alto</Button>\r\n            </>\r\n          )}\r\n\r\n          {diagnostico.pergunta.includes(\"(Minimo/Maximo/Normal)\") && (\r\n            <>\r\n              <Button onClick={() => handleAnswer(\"Minimo\")} variant=\"contained\" color=\"primary\" sx={{ mr: 2 }}>Minimo</Button>\r\n              <Button onClick={() => handleAnswer(\"Normal\")} variant=\"contained\" color=\"primary\" sx={{ mr: 2 }}>Normal</Button>\r\n              <Button onClick={() => handleAnswer(\"Maximo\")} variant=\"contained\" color=\"primary\">Maximo</Button>\r\n            </>\r\n          )}\r\n          \r\n          {diagnostico.pergunta.match(/\\s+\\((\\d+\\.\\d+) \\/ (\\d+\\.\\d+)\\)Litros/) && (\r\n            <>\r\n              {(() => {\r\n                const match = diagnostico.pergunta.match(/\\s+\\((\\d+\\.\\d+) \\/ (\\d+\\.\\d+)\\)Litros/);\r\n                const minValue = match ? parseFloat(match[1]) : 0;\r\n                const maxValue = match ? parseFloat(match[2]) : 0;\r\n\r\n                return (\r\n                  <>\r\n                    <TextField \r\n                      type=\"number\" \r\n                      step=\"0.1\" \r\n                      min={minValue} \r\n                      max={maxValue} \r\n                      value={nivelOleo !== null ? nivelOleo : minValue}\r\n                      onChange={(e) => setNivelOleo(parseFloat(e.target.value))}\r\n                      style={{ width:\"100px\" }}\r\n                      InputProps={{ inputProps: { max: maxValue, min: minValue } }}\r\n                    />\r\n                    \r\n                    <Button onClick={() => handleAnswer(nivelOleo)} variant=\"contained\" color=\"primary\" sx={{ ml: 2, mt: 2 }}>\r\n                      Enviar resposta\r\n                    </Button>\r\n                  </>\r\n                );\r\n              })()}\r\n            </>\r\n          )}\r\n          \r\n          {diagnostico.pergunta.match(/Verifique os seguintes componentes\\:/) && (\r\n            <>\r\n              {diagnostico.pergunta.match(/\\d+/g).map((num, index) => (\r\n                <Button key={index} onClick={() => handleAnswer(num)} variant=\"contained\" color=\"primary\" sx={{ mr: 2 }}>\r\n                  {num}\r\n                </Button>\r\n              ))}\r\n            </>\r\n          )}\r\n        </Box>\r\n      )}\r\n      </Box>\r\n    </CardWrapper>\r\n  );\r\n};\r\n\r\nexport default DiagnosticoCarro;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}