{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jorge Cunha\\\\Documents\\\\GitHub\\\\AIAutonomousDriving\\\\frontend\\\\car-diagnosis\\\\src\\\\pages\\\\DiagnosticoCarro.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport HomeIcon from '@mui/icons-material/Home';\nimport { Alert, Box, Button, Card, CardContent, CircularProgress, Container, IconButton, TextField, Typography } from \"@mui/material\";\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getApiUrl, getSistemaSelecionado } from '../config/apiConfig';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst sistemaSelecionado = getSistemaSelecionado();\nconst useDiagnostico = initialData => {\n  _s();\n  const [diagnostico, setDiagnostico] = useState(initialData);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  const API_URL = getApiUrl();\n  console.log(\">>>>>>> DiagnosticoCarro: diagnostico:\" + diagnostico);\n  const handleAnswer = async answer => {\n    setLoading(true);\n    let requestBody = {};\n    let endpoint = '';\n    let prolog_response;\n    if (sistemaSelecionado === 'Drools') {\n      endpoint = '/diagnostico/responder';\n      requestBody = {\n        texto: answer,\n        estado: diagnostico.estado,\n        pergunta: diagnostico.pergunta,\n        carroSelecionado: diagnostico.carroSelecionado,\n        marcaSelecionada: diagnostico.carroSelecionado.marca.nome,\n        modeloSelecionado: diagnostico.carroSelecionado.modelo.nome,\n        motorSelecionado: diagnostico.carroSelecionado.motor.nome,\n        diagnostico: diagnostico.diagnostico,\n        solucao: diagnostico.solucao,\n        explicacaoGeral: diagnostico.explicacaoGeral,\n        explicacaoGeralNao: diagnostico.explicacaoGeralNao,\n        como: diagnostico.como,\n        evidencias: diagnostico.evidencias,\n        triggeredRules: diagnostico.triggeredRules\n      };\n      try {\n        const response = await axios.post(`${API_URL}${endpoint}`, requestBody);\n        if (response.data.estado === 'finalizado') {\n          navigate('/conclusao', {\n            state: {\n              responseData: response.data\n            }\n          });\n        } else if (!response.data || !response.data.carroSelecionado.marca || !response.data.carroSelecionado.hasOwnProperty(\"marca\")) {\n          navigate('/error', {\n            state: {\n              responseData: response.data || 'Não recebeu dados válidos.'\n            }\n          });\n        } else {\n          setDiagnostico(response.data);\n        }\n      } catch (err) {\n        setError('Falha ao enviar resposta.');\n      } finally {\n        setLoading(false);\n      }\n    } else if (sistemaSelecionado === 'PROLOG') {\n      // PARA A PERGUNTA\n      endpoint = '/pergunta';\n      // localhost:4040/pergunta | GET\n      // sem body\n      // Resposta:\n      // {\n      //   \"estado\": \"ongoing\",\n      //   \"pergunta\": \"O veiculo Opel Astra J 1.6 CDTi tem algum problema?\",\n      //   \"respostas\": [\n      //       \"sim\",\n      //       \"nao\",\n      //       \"nao_sei\"\n      //   ]\n      // }\n\n      // PARA O RESPONDER\n      //endpoint = '/responder';  \n      // localhost:4040/responder | POST\n      // no body do post: {\"resposta\": \"sim\"}\n      // Resposta:\n      // {\n      //   \"message\": \"Respondido\",\n      //   \"status\": \"OK\"\n      // }Foi concluido o facto proximo_teste numero 2 -> proximo_teste(2,liga)\n\n      requestBody = {\n        texto: answer,\n        estado: (diagnostico === null || diagnostico === void 0 ? void 0 : diagnostico.estado) || 'N/A',\n        pergunta: (diagnostico === null || diagnostico === void 0 ? void 0 : diagnostico.pergunta) || 'N/A',\n        carroSelecionado: (diagnostico === null || diagnostico === void 0 ? void 0 : diagnostico.carroSelecionado) || 'N/A',\n        marcaSelecionada: 'N/A',\n        modeloSelecionado: 'N/A',\n        motorSelecionado: 'N/A',\n        diagnostico: 'N/A',\n        solucao: 'N/A',\n        explicacaoGeral: 'N/A',\n        explicacaoGeralNao: 'N/A',\n        como: 'N/A',\n        evidencias: 'N/A',\n        triggeredRules: 'N/A'\n      };\n      prolog_response = await axios.get(`${API_URL}${endpoint}`);\n      const estado = prolog_response.data.estado;\n      const pergunta = prolog_response.data.pergunta;\n      const respostas = prolog_response.data.respostas;\n      console.log(\">>>> DiagnosticoCarro: estado: \" + estado);\n      console.log(\">>>> DiagnosticoCarro: pergunta: \" + pergunta);\n      console.log(\">>>> DiagnosticoCarro: respostas: \" + respostas);\n      try {\n        const response = await axios.post(`${API_URL}${endpoint}`, requestBody);\n        if (response.data.estado === 'finalizado') {\n          navigate('/conclusao', {\n            state: {\n              responseData: response.data\n            }\n          });\n        } else if (!response.data) {\n          navigate('/error', {\n            state: {\n              responseData: response.data || 'Não recebeu dados válidos.'\n            }\n          });\n        } else {\n          setDiagnostico(response.data);\n        }\n      } catch (err) {\n        setError('Falha ao enviar resposta.');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    // try {\n    //   const response = await axios.post(`${API_URL}${endpoint}`, requestBody);\n\n    //   if (response.data.estado === 'finalizado') {\n    //     navigate('/conclusao', { state: { responseData: response.data } });\n    //   } else if (\n    //     !response.data ||\n    //     !response.data.carroSelecionado.marca ||\n    //     !response.data.carroSelecionado.hasOwnProperty(\"marca\")\n    //   ) {\n    //     navigate('/error', { state: { responseData: response.data || 'Não recebeu dados válidos.' } });\n    //   } else {\n    //     setDiagnostico(response.data);\n    //   }\n    // } catch (err) {\n    //   setError('Falha ao enviar resposta.');\n    // } finally {\n    //   setLoading(false);\n    // }\n  };\n  return {\n    diagnostico,\n    loading,\n    error,\n    handleAnswer\n  };\n};\n\n// const useDiagnostico = (initialData) => {\n//   const [diagnostico, setDiagnostico] = useState(initialData);\n//   const [loading, setLoading] = useState(false);\n//   const [error, setError] = useState(null);\n//   const navigate = useNavigate();\n\n//   const handleAnswer = async (answer) => {\n//     setLoading(true);\n\n//     const requestBody = {\n//       texto: answer,\n//       estado: diagnostico.estado,\n//       pergunta: diagnostico.pergunta,\n//       carroSelecionado: diagnostico.carroSelecionado,\n//       marcaSelecionada: diagnostico.carroSelecionado.marca.nome,\n//       modeloSelecionado: diagnostico.carroSelecionado.modelo.nome,\n//       motorSelecionado: diagnostico.carroSelecionado.motor.nome,\n//       diagnostico: diagnostico.diagnostico,\n//       solucao: diagnostico.solucao,\n//       explicacaoGeral: diagnostico.explicacaoGeral,\n//       explicacaoGeralNao: diagnostico.explicacaoGeralNao,\n//       como: diagnostico.como,\n//       evidencias: diagnostico.evidencias,\n//       triggeredRules: diagnostico.triggeredRules,\n//     };\n\n//     try {\n//       const response = await axios.post(`${getApiUrl()}/diagnostico/responder`, requestBody);\n\n//       if (response.data.estado === 'finalizado') {\n//         navigate('/conclusao', { state: { responseData: response.data } });\n//       } else if (!response.data || !response.data.carroSelecionado.marca || !response.data.carroSelecionado.hasOwnProperty(\"marca\")) {\n//         navigate('/error', { state: { responseData: response.data || 'Não recebeu dados válidos.' } });\n//       } else {\n//         setDiagnostico(response.data);\n//       }\n\n//     } catch (err) {\n//       setError('Falha ao enviar resposta.');\n//     } finally {\n//       setLoading(false);\n//     }\n//   };\n\n//   return { diagnostico, loading, error, handleAnswer };\n// };\n_s(useDiagnostico, \"Lq9Kdswq+tzE4+2Wm6YUGOX1pUM=\", false, function () {\n  return [useNavigate];\n});\nconst DiagnosticoCarro = () => {\n  _s2();\n  var _diagnostico$carroSel, _diagnostico$carroSel2, _diagnostico$carroSel3;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [nivelOleo, setNivelOleo] = useState(0.0);\n  const {\n    diagnosticoData\n  } = location.state;\n  const {\n    diagnostico,\n    loading,\n    error,\n    handleAnswer\n  } = useDiagnostico(diagnosticoData);\n  if (!diagnosticoData) return null;\n  const marca = (diagnostico === null || diagnostico === void 0 ? void 0 : (_diagnostico$carroSel = diagnostico.carroSelecionado.marca) === null || _diagnostico$carroSel === void 0 ? void 0 : _diagnostico$carroSel.nome) || 'N/A';\n  const modelo = (diagnostico === null || diagnostico === void 0 ? void 0 : (_diagnostico$carroSel2 = diagnostico.carroSelecionado.modelo) === null || _diagnostico$carroSel2 === void 0 ? void 0 : _diagnostico$carroSel2.nome) || 'N/A';\n  const motor = (diagnostico === null || diagnostico === void 0 ? void 0 : (_diagnostico$carroSel3 = diagnostico.carroSelecionado.motor) === null || _diagnostico$carroSel3 === void 0 ? void 0 : _diagnostico$carroSel3.nome) || 'N/A';\n  const getImagePath = () => {\n    try {\n      if (marca && modelo) {\n        return require(`../assets/img/carros/${marca}/${modelo}.png`);\n      }\n    } catch (err) {\n      console.error('Imagem não encontrada', err);\n    }\n    return require(`../assets/img/carros/question-car.png`);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          position: 'relative',\n          padding: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            position: 'absolute',\n            top: 16,\n            right: 16\n          },\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            variant: \"contained\",\n            onClick: () => navigate('/'),\n            color: \"primary\",\n            sx: {\n              color: 'primary',\n              backgroundColor: 'white'\n            },\n            children: /*#__PURE__*/_jsxDEV(HomeIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h1\",\n            gutterBottom: true,\n            children: [\"Question\\xE1rio Diagn\\xF3stico: \", sistemaSelecionado]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h2\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: getImagePath(),\n                alt: \"Carro Selecionado\",\n                style: {\n                  width: '300px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), marca, \", \", modelo, \", \", motor]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            component: \"h3\",\n            sx: {\n              mt: 2\n            },\n            children: diagnostico.pergunta\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'center',\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(Alert, {\n              severity: \"error\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this), diagnostico.pergunta && !loading && /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              mt: 3\n            },\n            children: [diagnostico.pergunta.includes(\"(Sim/Não)\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAnswer(\"Sim\"),\n                variant: \"contained\",\n                color: \"primary\",\n                sx: {\n                  mr: 2\n                },\n                children: \"Sim\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAnswer(\"Não\"),\n                variant: \"contained\",\n                color: \"secondary\",\n                children: \"N\\xE3o\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), diagnostico.pergunta.includes(\"(Baixo/Alto/Normal)\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAnswer(\"Baixo\"),\n                variant: \"contained\",\n                color: \"primary\",\n                sx: {\n                  mr: 2\n                },\n                children: \"Baixo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAnswer(\"Normal\"),\n                variant: \"contained\",\n                color: \"primary\",\n                sx: {\n                  mr: 2\n                },\n                children: \"Normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAnswer(\"Alto\"),\n                variant: \"contained\",\n                color: \"primary\",\n                children: \"Alto\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), diagnostico.pergunta.includes(\"(Minimo/Maximo/Normal)\") && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAnswer(\"Minimo\"),\n                variant: \"contained\",\n                color: \"primary\",\n                sx: {\n                  mr: 2\n                },\n                children: \"Minimo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAnswer(\"Normal\"),\n                variant: \"contained\",\n                color: \"primary\",\n                sx: {\n                  mr: 2\n                },\n                children: \"Normal\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAnswer(\"Maximo\"),\n                variant: \"contained\",\n                color: \"primary\",\n                children: \"Maximo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true), diagnostico.pergunta.match(/\\s+\\((\\d+\\.\\d+) \\/ (\\d+\\.\\d+)\\)Litros/) && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: (() => {\n                const match = diagnostico.pergunta.match(/\\s+\\((\\d+\\.\\d+) \\/ (\\d+\\.\\d+)\\)Litros/);\n                const minValue = match ? parseFloat(match[1]) : 0;\n                const maxValue = match ? parseFloat(match[2]) : 0;\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    type: \"number\",\n                    step: \"0.1\",\n                    min: minValue,\n                    max: maxValue,\n                    value: nivelOleo !== null ? nivelOleo : minValue,\n                    onChange: e => setNivelOleo(parseFloat(e.target.value)),\n                    style: {\n                      width: \"100px\"\n                    },\n                    InputProps: {\n                      inputProps: {\n                        max: maxValue,\n                        min: minValue\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => handleAnswer(nivelOleo),\n                    variant: \"contained\",\n                    color: \"primary\",\n                    sx: {\n                      ml: 2,\n                      mt: 2\n                    },\n                    children: \"Enviar resposta\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true);\n              })()\n            }, void 0, false), diagnostico.pergunta.match(/Verifique os seguintes componentes\\:/) && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: diagnostico.pergunta.match(/\\d+/g).map((num, index) => /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => handleAnswer(num),\n                variant: \"contained\",\n                color: \"primary\",\n                sx: {\n                  mr: 2\n                },\n                children: num\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 23\n              }, this))\n            }, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            gutterBottom: true,\n            children: \"JSON response:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"pre\",\n            sx: {\n              whiteSpace: 'pre-wrap',\n              wordWrap: 'break-word',\n              backgroundColor: 'black',\n              padding: '10px',\n              borderRadius: '5px',\n              overflowX: 'auto',\n              maxHeight: '500px'\n            },\n            children: JSON.stringify(diagnostico, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n_s2(DiagnosticoCarro, \"5EhfdftRY/wXfywnUYkeVBiMx0c=\", false, function () {\n  return [useLocation, useNavigate, useDiagnostico];\n});\n_c = DiagnosticoCarro;\nexport default DiagnosticoCarro;\nvar _c;\n$RefreshReg$(_c, \"DiagnosticoCarro\");","map":{"version":3,"names":["HomeIcon","Alert","Box","Button","Card","CardContent","CircularProgress","Container","IconButton","TextField","Typography","axios","useState","useLocation","useNavigate","getApiUrl","getSistemaSelecionado","jsxDEV","_jsxDEV","Fragment","_Fragment","sistemaSelecionado","useDiagnostico","initialData","_s","diagnostico","setDiagnostico","loading","setLoading","error","setError","navigate","API_URL","console","log","handleAnswer","answer","requestBody","endpoint","prolog_response","texto","estado","pergunta","carroSelecionado","marcaSelecionada","marca","nome","modeloSelecionado","modelo","motorSelecionado","motor","solucao","explicacaoGeral","explicacaoGeralNao","como","evidencias","triggeredRules","response","post","data","state","responseData","hasOwnProperty","err","get","respostas","DiagnosticoCarro","_s2","_diagnostico$carroSel","_diagnostico$carroSel2","_diagnostico$carroSel3","location","nivelOleo","setNivelOleo","diagnosticoData","getImagePath","require","children","display","justifyContent","alignItems","minHeight","sx","position","padding","top","right","variant","onClick","color","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","component","gutterBottom","mt","src","alt","style","width","severity","includes","mr","match","minValue","parseFloat","maxValue","type","step","min","max","value","onChange","e","target","InputProps","inputProps","ml","map","num","index","whiteSpace","wordWrap","borderRadius","overflowX","maxHeight","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/Jorge Cunha/Documents/GitHub/AIAutonomousDriving/frontend/car-diagnosis/src/pages/DiagnosticoCarro.jsx"],"sourcesContent":["import HomeIcon from '@mui/icons-material/Home';\r\nimport { Alert, Box, Button, Card, CardContent, CircularProgress, Container, IconButton, TextField, Typography } from \"@mui/material\";\r\nimport axios from 'axios';\r\nimport { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport { getApiUrl, getSistemaSelecionado } from '../config/apiConfig';\r\n\r\nconst sistemaSelecionado = getSistemaSelecionado();\r\n\r\nconst useDiagnostico = (initialData) => {\r\n  const [diagnostico, setDiagnostico] = useState(initialData);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n  const API_URL = getApiUrl();\r\n\r\n  console.log(\">>>>>>> DiagnosticoCarro: diagnostico:\" + diagnostico);\r\n\r\n  const handleAnswer = async (answer) => {\r\n    setLoading(true);\r\n\r\n    let requestBody = {};\r\n    let endpoint = '';\r\n    let prolog_response;\r\n\r\n    if (sistemaSelecionado === 'Drools') {\r\n\r\n      endpoint = '/diagnostico/responder';\r\n\r\n      requestBody = {\r\n        texto: answer,\r\n        estado: diagnostico.estado,\r\n        pergunta: diagnostico.pergunta,\r\n        carroSelecionado: diagnostico.carroSelecionado,\r\n        marcaSelecionada: diagnostico.carroSelecionado.marca.nome,\r\n        modeloSelecionado: diagnostico.carroSelecionado.modelo.nome,\r\n        motorSelecionado: diagnostico.carroSelecionado.motor.nome,\r\n        diagnostico: diagnostico.diagnostico,\r\n        solucao: diagnostico.solucao,\r\n        explicacaoGeral: diagnostico.explicacaoGeral,\r\n        explicacaoGeralNao: diagnostico.explicacaoGeralNao,\r\n        como: diagnostico.como,\r\n        evidencias: diagnostico.evidencias,\r\n        triggeredRules: diagnostico.triggeredRules,\r\n      };\r\n\r\n      try {\r\n        const response = await axios.post(`${API_URL}${endpoint}`, requestBody);\r\n  \r\n        if (response.data.estado === 'finalizado') {\r\n          navigate('/conclusao', { state: { responseData: response.data } });\r\n        } else if (\r\n          !response.data ||\r\n          !response.data.carroSelecionado.marca ||\r\n          !response.data.carroSelecionado.hasOwnProperty(\"marca\")\r\n        ) {\r\n          navigate('/error', { state: { responseData: response.data || 'Não recebeu dados válidos.' } });\r\n        } else {\r\n          setDiagnostico(response.data);\r\n        }\r\n      } catch (err) {\r\n        setError('Falha ao enviar resposta.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n\r\n    } else if (sistemaSelecionado === 'PROLOG') {\r\n\r\n      // PARA A PERGUNTA\r\n      endpoint = '/pergunta';  \r\n      // localhost:4040/pergunta | GET\r\n      // sem body\r\n      // Resposta:\r\n      // {\r\n      //   \"estado\": \"ongoing\",\r\n      //   \"pergunta\": \"O veiculo Opel Astra J 1.6 CDTi tem algum problema?\",\r\n      //   \"respostas\": [\r\n      //       \"sim\",\r\n      //       \"nao\",\r\n      //       \"nao_sei\"\r\n      //   ]\r\n      // }\r\n\r\n      // PARA O RESPONDER\r\n      //endpoint = '/responder';  \r\n      // localhost:4040/responder | POST\r\n      // no body do post: {\"resposta\": \"sim\"}\r\n      // Resposta:\r\n      // {\r\n      //   \"message\": \"Respondido\",\r\n      //   \"status\": \"OK\"\r\n      // }Foi concluido o facto proximo_teste numero 2 -> proximo_teste(2,liga)\r\n\r\n      requestBody = {\r\n        texto: answer,\r\n        estado: diagnostico?.estado || 'N/A',\r\n        pergunta: diagnostico?.pergunta || 'N/A',\r\n        carroSelecionado: diagnostico?.carroSelecionado || 'N/A',\r\n        marcaSelecionada: 'N/A',\r\n        modeloSelecionado: 'N/A',\r\n        motorSelecionado: 'N/A',\r\n        diagnostico: 'N/A',\r\n        solucao: 'N/A',\r\n        explicacaoGeral: 'N/A',\r\n        explicacaoGeralNao: 'N/A',\r\n        como: 'N/A',\r\n        evidencias: 'N/A',\r\n        triggeredRules: 'N/A',\r\n      };\r\n\r\n      prolog_response = await axios.get(`${API_URL}${endpoint}`);\r\n\r\n      const estado = prolog_response.data.estado;\r\n      const pergunta = prolog_response.data.pergunta;\r\n      const respostas = prolog_response.data.respostas;\r\n      \r\n      console.log(\">>>> DiagnosticoCarro: estado: \" + estado);\r\n      console.log(\">>>> DiagnosticoCarro: pergunta: \" + pergunta);\r\n      console.log(\">>>> DiagnosticoCarro: respostas: \" + respostas);\r\n\r\n      try {\r\n        const response = await axios.post(`${API_URL}${endpoint}`, requestBody);\r\n  \r\n        if (response.data.estado === 'finalizado') {\r\n          navigate('/conclusao', { state: { responseData: response.data } });\r\n        } else if (\r\n          !response.data\r\n        ) {\r\n          navigate('/error', { state: { responseData: response.data || 'Não recebeu dados válidos.' } });\r\n        } else {\r\n          setDiagnostico(response.data);\r\n        }\r\n      } catch (err) {\r\n        setError('Falha ao enviar resposta.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    }\r\n\r\n    // try {\r\n    //   const response = await axios.post(`${API_URL}${endpoint}`, requestBody);\r\n\r\n    //   if (response.data.estado === 'finalizado') {\r\n    //     navigate('/conclusao', { state: { responseData: response.data } });\r\n    //   } else if (\r\n    //     !response.data ||\r\n    //     !response.data.carroSelecionado.marca ||\r\n    //     !response.data.carroSelecionado.hasOwnProperty(\"marca\")\r\n    //   ) {\r\n    //     navigate('/error', { state: { responseData: response.data || 'Não recebeu dados válidos.' } });\r\n    //   } else {\r\n    //     setDiagnostico(response.data);\r\n    //   }\r\n    // } catch (err) {\r\n    //   setError('Falha ao enviar resposta.');\r\n    // } finally {\r\n    //   setLoading(false);\r\n    // }\r\n  };\r\n\r\n  return { diagnostico, loading, error, handleAnswer };\r\n};\r\n\r\n// const useDiagnostico = (initialData) => {\r\n//   const [diagnostico, setDiagnostico] = useState(initialData);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [error, setError] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleAnswer = async (answer) => {\r\n//     setLoading(true);\r\n\r\n//     const requestBody = {\r\n//       texto: answer,\r\n//       estado: diagnostico.estado,\r\n//       pergunta: diagnostico.pergunta,\r\n//       carroSelecionado: diagnostico.carroSelecionado,\r\n//       marcaSelecionada: diagnostico.carroSelecionado.marca.nome,\r\n//       modeloSelecionado: diagnostico.carroSelecionado.modelo.nome,\r\n//       motorSelecionado: diagnostico.carroSelecionado.motor.nome,\r\n//       diagnostico: diagnostico.diagnostico,\r\n//       solucao: diagnostico.solucao,\r\n//       explicacaoGeral: diagnostico.explicacaoGeral,\r\n//       explicacaoGeralNao: diagnostico.explicacaoGeralNao,\r\n//       como: diagnostico.como,\r\n//       evidencias: diagnostico.evidencias,\r\n//       triggeredRules: diagnostico.triggeredRules,\r\n//     };\r\n\r\n//     try {\r\n//       const response = await axios.post(`${getApiUrl()}/diagnostico/responder`, requestBody);\r\n\r\n//       if (response.data.estado === 'finalizado') {\r\n//         navigate('/conclusao', { state: { responseData: response.data } });\r\n//       } else if (!response.data || !response.data.carroSelecionado.marca || !response.data.carroSelecionado.hasOwnProperty(\"marca\")) {\r\n//         navigate('/error', { state: { responseData: response.data || 'Não recebeu dados válidos.' } });\r\n//       } else {\r\n//         setDiagnostico(response.data);\r\n//       }\r\n\r\n//     } catch (err) {\r\n//       setError('Falha ao enviar resposta.');\r\n//     } finally {\r\n//       setLoading(false);\r\n//     }\r\n//   };\r\n\r\n//   return { diagnostico, loading, error, handleAnswer };\r\n// };\r\n\r\nconst DiagnosticoCarro = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const [nivelOleo, setNivelOleo] = useState(0.0);\r\n  \r\n  const { diagnosticoData } = location.state;\r\n  const { diagnostico, loading, error, handleAnswer } = useDiagnostico(diagnosticoData);\r\n\r\n  if (!diagnosticoData) return null;\r\n\r\n  const marca = diagnostico?.carroSelecionado.marca?.nome || 'N/A';\r\n  const modelo = diagnostico?.carroSelecionado.modelo?.nome || 'N/A';\r\n  const motor = diagnostico?.carroSelecionado.motor?.nome || 'N/A';\r\n\r\n  const getImagePath = () => {\r\n    try {\r\n      if (marca && modelo) {\r\n        return require(`../assets/img/carros/${marca}/${modelo}.png`);\r\n      }\r\n    } catch (err) {\r\n      console.error('Imagem não encontrada', err);\r\n    }\r\n    return require(`../assets/img/carros/question-car.png`);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"100vh\">\r\n        <Card sx={{ position: 'relative', padding: 2 }}>\r\n          <Box sx={{ position: 'absolute', top: 16, right: 16}}>\r\n            <IconButton\r\n              variant=\"contained\"\r\n              onClick={()=>navigate('/')}\r\n              color='primary'\r\n              sx={{ color: 'primary', backgroundColor: 'white' }}\r\n            >\r\n              <HomeIcon />\r\n            </IconButton>\r\n          </Box>\r\n          <CardContent>\r\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\r\n              Questionário Diagnóstico: {sistemaSelecionado}\r\n            </Typography>\r\n\r\n            <Typography variant=\"h6\" component=\"h2\">\r\n              <Box mt={2}>\r\n                <img src={getImagePath()} alt=\"Carro Selecionado\" style={{ width: '300px' }} />\r\n              </Box>\r\n              {marca}, {modelo}, {motor}\r\n            </Typography>\r\n\r\n            <Typography variant=\"h4\" component=\"h3\" sx={{ mt: 2 }}>\r\n              {diagnostico.pergunta}\r\n            </Typography>\r\n\r\n            {loading && (\r\n              <Box sx={{ display: 'flex', justifyContent: 'center', mt: 2 }}>\r\n                <CircularProgress />\r\n              </Box>\r\n            )}\r\n\r\n            {error && (\r\n              <Box sx={{ mt: 2 }}>\r\n                <Alert severity=\"error\">{error}</Alert>\r\n              </Box>\r\n            )}\r\n\r\n            {diagnostico.pergunta && !loading && (\r\n              <Box sx={{ mt: 3 }}>\r\n                {diagnostico.pergunta.includes(\"(Sim/Não)\") && (\r\n                  <>\r\n                    <Button onClick={() => handleAnswer(\"Sim\")} variant=\"contained\" color=\"primary\" sx={{ mr: 2 }}>Sim</Button>\r\n                    <Button onClick={() => handleAnswer(\"Não\")} variant=\"contained\" color=\"secondary\">Não</Button>\r\n                  </>\r\n                )}\r\n\r\n                {diagnostico.pergunta.includes(\"(Baixo/Alto/Normal)\") && (\r\n                  <>\r\n                    <Button onClick={() => handleAnswer(\"Baixo\")} variant=\"contained\" color=\"primary\" sx={{ mr: 2 }}>Baixo</Button>\r\n                    <Button onClick={() => handleAnswer(\"Normal\")} variant=\"contained\" color=\"primary\" sx={{ mr: 2 }}>Normal</Button>\r\n                    <Button onClick={() => handleAnswer(\"Alto\")} variant=\"contained\" color=\"primary\">Alto</Button>\r\n                  </>\r\n                )}\r\n\r\n                {diagnostico.pergunta.includes(\"(Minimo/Maximo/Normal)\") && (\r\n                  <>\r\n                    <Button onClick={() => handleAnswer(\"Minimo\")} variant=\"contained\" color=\"primary\" sx={{ mr: 2 }}>Minimo</Button>\r\n                    <Button onClick={() => handleAnswer(\"Normal\")} variant=\"contained\" color=\"primary\" sx={{ mr: 2 }}>Normal</Button>\r\n                    <Button onClick={() => handleAnswer(\"Maximo\")} variant=\"contained\" color=\"primary\">Maximo</Button>\r\n                  </>\r\n                )}\r\n                \r\n                {diagnostico.pergunta.match(/\\s+\\((\\d+\\.\\d+) \\/ (\\d+\\.\\d+)\\)Litros/) && (\r\n                  <>\r\n                    {(() => {\r\n                      const match = diagnostico.pergunta.match(/\\s+\\((\\d+\\.\\d+) \\/ (\\d+\\.\\d+)\\)Litros/);\r\n                      const minValue = match ? parseFloat(match[1]) : 0;\r\n                      const maxValue = match ? parseFloat(match[2]) : 0;\r\n\r\n                      return (\r\n                        <>\r\n                          <TextField \r\n                            type=\"number\" \r\n                            step=\"0.1\" \r\n                            min={minValue} \r\n                            max={maxValue} \r\n                            value={nivelOleo !== null ? nivelOleo : minValue}\r\n                            onChange={(e) => setNivelOleo(parseFloat(e.target.value))}\r\n                            style={{ width:\"100px\" }}\r\n                            InputProps={{ inputProps: { max: maxValue, min: minValue } }}\r\n                          />\r\n                          \r\n                          <Button onClick={() => handleAnswer(nivelOleo)} variant=\"contained\" color=\"primary\" sx={{ ml: 2, mt: 2 }}>\r\n                            Enviar resposta\r\n                          </Button>\r\n                        </>\r\n                      );\r\n                    })()}\r\n                  </>\r\n                )}\r\n                \r\n                {diagnostico.pergunta.match(/Verifique os seguintes componentes\\:/) && (\r\n                  <>\r\n                    {diagnostico.pergunta.match(/\\d+/g).map((num, index) => (\r\n                      <Button key={index} onClick={() => handleAnswer(num)} variant=\"contained\" color=\"primary\" sx={{ mr: 2 }}>\r\n                        {num}\r\n                      </Button>\r\n                    ))}\r\n                  </>\r\n                )}\r\n              </Box>\r\n            )}\r\n\r\n          </CardContent>\r\n\r\n          <CardContent>\r\n            <Typography variant=\"body1\" gutterBottom>\r\n              JSON response:\r\n            </Typography>\r\n            <Box\r\n              component=\"pre\"\r\n              sx={{\r\n                whiteSpace: 'pre-wrap',\r\n                wordWrap: 'break-word',\r\n                backgroundColor: 'black',\r\n                padding: '10px',\r\n                borderRadius: '5px',\r\n                overflowX: 'auto',\r\n                maxHeight: '500px',\r\n              }}\r\n            >\r\n              {JSON.stringify(diagnostico, null, 2)}\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DiagnosticoCarro;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}